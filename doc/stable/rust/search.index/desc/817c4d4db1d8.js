rd_("AdRSA private exponent0AcRSA public exponentCl1-bit field that indicates that information describing a \xe2\x80\xa610Ch1-bit flag indicating whether the function homes the \xe2\x80\xa60AbRSA public modulus0AbFirst prime factor0AcSecond prime factor0Cn1-bit field that indicates the presence (1) or absence (0) \xe2\x80\xa60CgFlag indicating whether the function includes extra \xe2\x80\xa60kA PE binary0CeEither <code>IMAGE_DYNAMIC_RELOCATION32</code> or \xe2\x80\xa60000000CbCount for <code>/GS</code> (number of guard stack)0CmInteger that identifies the Type, Name, or Language ID of \xe2\x80\xa6jEntry typeCgThe unique identifier of the primary module for the \xe2\x80\xa6210ChReturn the initial Program Counter regardless of the \xe2\x80\xa60BnModule for the PE file format support in LIEF.0cAIX0cARMAaARM little endianAhAn ARM/thumb instruction02100AhThe image file is a DLL.0CcShared library <strong>or</strong> a pie-executable0mEFI byte code0mAn ELF binary0CgEntry associated with <code>IMAGE_DEBUG_TYPE_FPO</code>DiThis structure represents the <code>IMAGE_DEBUG_TYPE_FPO</code> debug \xe2\x80\xa610iGNU/Linux0C`Structure that wraps the GNU-hash implementation0AbAn immediate value0000000Ao2\xe2\x80\x99s complement, little endian0Al2\xe2\x80\x99s complement, big endian0A`A memory operand0000000AoHewlett-Packard Non-Stop Kernel0BaRelocatable file (or object file)CeThe relocation is using the regular Elf_Rel structureBhRelocation entries; no explicit addends.210jRSA Scheme0BjA register operand (e.g. <code>RIP</code>)0BiA register operand (e.g. <code>X0</code>)0oRegister offset22110kHitachi SH30kHitachi SH40kHitachi SH50BbThe thread-local storage template.AhThread local data object10AhA x86/x86-64 instruction000CeAge value to verify. The age does not necessarily \xe2\x80\xa6CbThe number of times the PDB file has been written.10BjGet a flags value with all known bits set.0000000000000000000000000000000BbARM architecture-related namespace0AkNumber of auxiliary entries0CkWorking directory where the <em>build tool</em> was invoked0BdModule for Dyld shared cache support0BoModule for the ELF file format support in LIEF.0AfEnd of the range (RVA)0DfEnvironment information represented by the <code>S_ENVBLOCK</code> \xe2\x80\xa60ChGet a <code>Binary</code> representation for this Dylib.0BkRVA of the delay-load import address table.0BmKey used to encode the header (xor operation)0AmLog a message with the logger0CgVersion index Numeric value used as an index in the \xe2\x80\xa60BoCreate a new Rpath entry with the given path(s)CaCreate a new RunPath entry with the given path(s)AdCreate a new segmentAjCreate a new Export objectAfCreate a new Data nodeAkCreate a new Directory node543210DgThe bitwise negation (<code>!</code>) of the bits in a flags value, \xe2\x80\xa60000000000000000000000000000000AmOID as described in RFC #2985AmOID of the original attributeAoAccording to the documentation:210AnModule for processing PDB filehPDB path01AnQuick Fix Engineeringa version0ChThe (raw) instructions of this entry as a slice of bytesB`The raw x509 bytes (DER encoded)BdRaw bytes of the current instruction02100AcThe register pushed000A`The function RVADnThe <strong>relative</strong> virtual address where the data referenced by \xe2\x80\xa6AcRVA of the functionAoRVA where the fixup takes placeAkRVA to the call instruction0CmThe <strong>Relative</strong> Virtual Address of the functionCi<strong>Relative</strong> Virtual Address of this symbol.65432210AfSDK version as a tuple0CfWhether <code>/sdl</code> was enabled for this binary.0GkCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is \xe2\x80\xa60000000000000000000000000000000AaThe actual string0CeThe intersection of a source flags value with the \xe2\x80\xa60000000000000000000000000000000BeDynamic TAG associated with the entry0BaReturn TLS information if presentCbWhether the builder should regenerate the TLS infoCjThis module represents the PE\xe2\x80\x99s Thread Local Storage \xe2\x80\xa6210Bix86/x86-64 architecture-related namespace0oMatsushita AM330dAROS0AcAutomatic detection0BoArchitecture supported by the dyld shared cache0BlInterface over <code>DW_TAG_base_type</code>0DhThis class wraps the <code>DW_TAG_base_type</code> type which can be \xe2\x80\xa6BdMirror <code>DW_TAG_base_type</code>0DgThis structure represents a primitive type like <code>int, char</code>.3232101020AdA COFF binary object0nCore dump file0BbA <em>data</em> node (i.e. a leaf)000CeBindings defined in <code>LC_DYLD_INFO</code> commandDfRelocation encoded in the rebase bytecode of <code>LC_DYLD_INFO</code>0110CiStructure that represents a bytecode rebase operation \xe2\x80\xa61CmThis structure represents a binding operation coming from \xe2\x80\xa6310AcAn eBPF instruction000Abnon-pie executable0oMirror `LF_ENUM0CdThis structure wraps a <code>LF_ENUM</code> PDB typeCcInterface over <code>DW_TAG_enumeration_type</code>0D`This structure represents a <code>DW_TAG_enumeration_type</code>BkMirror <code>DW_TAG_enumeration_type</code>0CdThis structure represents an editable enum type (\xe2\x80\xa6545432321010420BlLocal, absolute symbol that refers to a file0BjSymbol is executable code (function, etc.)0ChAuxiliary Format 4: Files from the PE-COFF documentationBlInterface over <code>DW_TAG_file_type</code>0CiThis structure represents a <code>DW_TAG_file_type</code>210100CiFlags describing the target platform, environment, or \xe2\x80\xa60AbSymbol hash table.BdCount based on hash table (reliable)10AfHP-UX operating system0hGNU/Hurd0AbIntel 386 or later0AnIntel Itanium processor family0dIRIX0CeThis structure represents an instance variable (ivar)000CiEnumeration describing the namespace or category of a \xe2\x80\xa60A`Loadable segment0AmMitsubishi M32R little endian0DkStructure that represent the <code>LC_MAIN</code> command. This kind of \xe2\x80\xa6000BbA Mips (mips32/mips64) instruction000AeCan\xe2\x80\x99t be determinedAcInvalid ELF versionmInvalid classAdInvalid data encodinnUnknown schemeCjNone of the identifiers of the image need to match the \xe2\x80\xa6543210AkInformation about the file.AfAuxiliary information.10CnThis enum represents a node in the resource tree which can \xe2\x80\xa60CfClass that represent the <code>LC_NOTE</code> command.000B`The program header table itself.0ChEntry associated with <code>IMAGE_DEBUG_TYPE_POGO</code>DdThis structure represents a <em>Profile Guided Optimization</em> \xe2\x80\xa610CfThe relocation is using the regular Elf_Rela structureBeRelocation entries; explicit addends.10CfThe relocation is using the relative relocation formatBaRelocation entries; only offsets.10CgThis class represents a stub entry in sections like \xe2\x80\xa6000BgThis structure wraps the sysv-hash info0CaThis enum represents a DWARF Type which includes:CeThe different types supported by the editor interfaceCgLIEF representation of the ELF <code>NT_</code> values.BeThe different types of the relocationDiType of the symbol. This enum matches the <code>STT_xxx</code> values \xe2\x80\xa6443321043CjStructure that represents the <code>LC_UUID</code> commandCaUUID used in different places of the shared cache011010kWeak symbol0B`Structure for a x509 certificate000dXBOX0BcArchitecture targeted by this cache0AbThe base register.000DmRVA of the <strong>bound</strong> delay-load import address table or 0 if \xe2\x80\xa60AnGet the underlying bits value.0000000000000000000000000000000Cb<code>X509</code> certificate used by this signer.0C`Module for the COFF file format support in LIEF.0BcThe raw command as a slice of bytesiRaw valueAkRaw data of the relocation:12101AlHexdump the provided buffer.0BceBPF architecture-related namespace0AdFilename or filepath0ClFill the content of this segment with the value provided \xe2\x80\xa60AoReturns the argument unchanged.0000DcParse from an input that implements <code>Read + Seek</code> traits11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111DeCreate a Signature from a PKCS#7 <em>reader</em> implementing the \xe2\x80\xa62222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222BgCreate a DebugInfo from a PDB file pathfThe GUID signature to verify against the .pdb file \xe2\x80\xa6BaUnique identifier of the PDB file10CfHash value of the dependency name (use ELF hashing \xe2\x80\xa6CkHash value of the symbol\xe2\x80\x99s name (using ELF hash function)BoThe hash associated with the reproducible buildAgHash of the PDB content3210ClIndex into the export table that is used to speed-up the \xe2\x80\xa6000ClRelocation info which contains, for instance, the symbol \xe2\x80\xa60BaCalls <code>U::from(self)</code>.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000BfYield a set of contained flags values.000000CcIterator over the <code>crate::macho::Binary</code>11111111111111110111111111AjKind of this runtime tableCjThe export\xe2\x80\x99s kind (regular, thread local, absolute, \xe2\x80\xa6)AmFixup\xe2\x80\x99s kind can be either:210AcThe language itself0dLIEFkLine numberAhIndex to another sectionAlLoad a PDB from its filepathAoLoad a DWARF from its file pathBcMips architecture-related namespaceDaReturn the <em>name</em> of the note (also known as \xe2\x80\x98owner\xe2\x80\x99 )CaName of the library (e.g. <code>libc.so.6</code>)CcSymbol\xe2\x80\x99s aux name (e.g. <code>GLIBC_2.2.5</code>)ClReturn the library name associated with this requirement \xe2\x80\xa6oSymbol\xe2\x80\x99s nameAcName of the sectionlLibrary nameBnName of the segment (e.g. <code>__TEXT</code>)AnPath to the linker (or loader)ClReturn the library\xe2\x80\x99s name (e.g. <code>kernel32.dll</code>)0DaThe name of the library exported (e.g. <code>KERNEL32.dll</code>)AiName of the node (if any)CiThe name of the function (this name is usually demangled)AeName of the attributeAcDemangled type nameAbName of the methodAbName of the symbolAiThe name of the parameterCbThe name of the function (<code>DW_AT_name</code>)DdReturn the type\xe2\x80\x99s name using either <code>DW_AT_name</code> or \xe2\x80\xa6C`Name of the index (usually not relevant like \xe2\x80\xa6AbName of the memberCjName of the file associated with this compilation unit \xe2\x80\xa6BhName of the variable (usually demangled)CiName of the scope. For instance namespace\xe2\x80\x99s name or \xe2\x80\xa679AaName of the classAdName of the propertyAmName of the instance variableBnReturn the (unscaled) next offset in the chainAoModule for Objective-C metadataCmWhether the segment\xe2\x80\x99s offsets should be packed to avoid \xe2\x80\xa6AkThe rpath value as a stringBfOriginal path of the library (e.g. \xe2\x80\xa6AnRebuild <code>DT_REL[A]</code>AlRebuild <code>DT_RELR</code>AfSize of the relocationClSize of the <strong>raw</strong> note which includes paddingAmSize of the symbol (can be 0)C`Size of the section <strong>in the file</strong>3BoSize of the command (should be greater than \xe2\x80\xa6CfThe size of the data referenced by this data directoryAmSize of the current structureAoSize of the function (in bytes)AbThe size allocatedAcThe size of the \xe2\x80\xa6ClSize of the type including all its attributes. This size \xe2\x80\xa6CdReturn the size taken by this function in the binaryClReturn the size of the type or an error if it can\xe2\x80\x99t be \xe2\x80\xa6DhSize of the array. For instance in <code>uint8_t[3]</code>, it returns 3ClReturn the size of the compilation unit according to its \xe2\x80\xa6DkReturn the size of the variable (or an <code>Error</code> if it can\xe2\x80\x99t \xe2\x80\xa6AoSize of the region being mappedB`Size of the instruction in bytes0D`Time as a tuple: <code>(year, month, day, hour, min, sec)</code>DnRVA of the <strong>unload</strong> delay-load import address table or 0 if \xe2\x80\xa6CbReturn the <code>LC_UUID</code> command if presentAlThe UUID as a 16-bytes arrayDbOriginally named <code>ClassID</code>, this uuid should match: \xe2\x80\xa6AmThe uuid of the subcache fileAoAlpha AXP, 32-bit address spacegAMD x64hx64 codeBnVariants optimized for the ARM64 architecture.AeARMv8 in 64-bits modeoPure ARM64 codeAeARMv7 Thumb mode onlyBgRepresents a stack-allocation operationCkThis structure represents a stack-allocation operation (\xe2\x80\xa6ChEntry for <code>DT_INIT_ARRAY, DT_FINI_ARRAY</code>, \xe2\x80\xa60AlMirror <code>LF_ARRAY</code>0CeThis structure wraps a <code>LF_ARRAY</code> PDB typeBmInterface over <code>DW_TAG_array_type</code>0CfThis class represents a <code>DW_TAG_array_type</code>BeMirror <code>DW_TAG_array_type</code>0DjThis structure represents an array type (<code>DW_TAG_array_type</code>\xe2\x80\xa6CmStructure that represents a dynamic entry associated with \xe2\x80\xa6531A`Mirror `LF_CLASS0CeThis structure wraps a <code>LF_CLASS</code> PDB typeBmInterface over <code>DW_TAG_class_type</code>0DeThis structure represents a <code>DW_TAG_class_type</code> DWARF typeDdThis class represents an Objective-C class (<code>@interface</code>)CmMatch the result of <code>Elfxx_Ehdr.e_ident[EI_CLASS]</code>421BmInterface over <code>DW_TAG_const_type</code>0CfThis class represents a <code>DW_TAG_const_type</code>0BoStructure which represents a library dependencyCjThis structure represents a library embedded in a dyld \xe2\x80\xa610BjElliptic-curve Digital Signature AlgorithmAeElliptic-curve schemen32-bit objectso64-bits objectsCgClass which represents an entry in the relocation tableChStructure which represents an entry in the export table.B`Mirror <code>DW_ATE_float</code>DgRelocation encoded in chained fixup <code>LC_DYLD_CHAINED_FIXUPS</code>0CmStructure that represents a fixup (i.e. relocation) from  \xe2\x80\xa6CkEntry for <code>DT_FLAGS</code> and <code>DT_FLAGS_1</code>0DiStructure that represents a dynamic flag entry: <code>DT_FLAGS</code> \xe2\x80\xa6nSection group.BbHistorical alias for ELFOSABI_GNU.lLocal symbolCjThis class mirrors the <code>DW_TAG_label</code> DWARF tagAkThe different levels of logAeA Mach-O (FAT) binaryCdThe different notes recognized and supported by LIEF0CjMatch the result <code>Elfxx_Ehdr.e_ident[EI_OSABI]</code>AgMIPS with little endianClStructure that represents the <code>LC_RPATH</code> command.0BnThis structure defines an implementation rangeCiEntry associated with <code>IMAGE_DEBUG_TYPE_REPRO</code>CmThis structure represents a reproducible build entry from \xe2\x80\xa6BcA RISC-V (32 or 64 bit) instruction0AoEntry for <code>DT_RPATH</code>0CmStructure that represents a dynamic entry associated with \xe2\x80\xa6hReserved0CiReserved Originally SAVE_XMM128_FAR in version 1, but \xe2\x80\xa6CfThis class materializes a scope in which Function, \xe2\x80\xa60BkInterface over <code>DW_TAG_set_type</code>0ChThis structure represents a <code>DW_TAG_set_type</code>0lARM or ThumbjTRU64 UNIXA`Mirror `LF_UNION0CeThis structure wraps a <code>LF_UNION</code> PDB typeBmInterface over <code>DW_TAG_union_type</code>0DeThis structure represents a <code>DW_TAG_union_type</code> DWARF type20BhThis structure represents an enum value.DdIf the export is a re-export (<code>Flags::REEXPORT</code>) this \xe2\x80\xa6D`The bitwise or (<code>|</code>) of the bits in two flags values.000000000000000mBuild VersionDjIf the fixup is <code>ARM64X_RELOC_VALUE</code>, return the associated \xe2\x80\xa6AlCount for <code>C/C++</code>CgThe associated DyldSharedCache object for this subcacheCeCheck if this signature is valid according to the \xe2\x80\xa6BaClear the content of this segmentCeSize of the thread state data with 32-bits alignment.Aj<em>Occurrence</em> count.DfReturn an iterator over the <code>debug::Entries</code> of the binary.CcWhether the builder should regenerate debug entriesCeModule that wraps the different debug information \xe2\x80\xa6BnCurrent depth of the Node in the resource treeBfModule for processing DWARF debug infoBfGet a flags value with all bits unset.000000000000000AiModule for LIEF\xe2\x80\x99s errorCjAdditional information whose meaning is not officially \xe2\x80\xa6nSections flagsCaThe flag permissions associated with this segmentA`Bitmask of flagsAcVersion informationCbFlags characterizing the semantics of the functionlHeader flagsCmSection\xe2\x80\x99s flags masked with <code>SECTION_FLAGS_MASK</code>BbFlags associated with this segmentEeReturn the <strong>interpreted</strong> <code>RuntimeTableEntry::flag_bit_nums</code>CfFlags to indicate if CI information is available, etc.AmSee: <code>UnwindFlags</code>Ba1 means that it contains metadataCiFile serial number matching <code>stat.st_ino</code> or 0DfIterator over the different instance variables (<code>IVar</code>) \xe2\x80\xa6CbModule for the Mach-O file format support in LIEF.CkThe Mach-O magic bytes. These bytes determine whether it isBgMagic bytes identifying a DOS/PE binarymMajor VersionmMinor VersionDfReturn an iterator over the  <code>crate::elf::Notes</code> of the \xe2\x80\xa6AfRebuild notes sectionsCiReturn an iterator over the <code>LC_NOTE</code> commandsBiAlias for <code>Symbol::visibility</code>CmIt returns the unique version index for the file which is \xe2\x80\xa6CbOwner of the note (e.g. <code>AIR_METALLIB</code>)AfParse form a file pathBjParse an ELF file from the given file pathCeCreate a <code>Binary</code> from the given file pathBlParse a Mach-O file from the given file pathBnCreate a FatBinary from the given Mach-O path.BhParse a PE file from the given file pathBgParse from a filepath given as a stringBjParse a COFF file from the given file pathBhParse from a file path given as a stringBgThe specified paths as a list of string0CmNumber of non-volatile FP registers (d8-d15) saved in the \xe2\x80\xa6CkNumber of non-volatile INT registers (x19-x28) saved in \xe2\x80\xa6AhReset the current loggerBeRISC-V architecture-related namespaceAlThe actual rpath as a stringCcReturn the <code>LC_RPATH</code> command if presentDhThe scale value associated with the <code>Memory::scaled_register</code>BkThe scope in which this function is defined0BkThe scope in which this variable is definedAbShift information.AhStart of the range (RVA)CnThe actual thread state as a vector of bytes. Depending on \xe2\x80\xa6DcReturn the list of <code>Types</code> exposed by the resource tree.DgReturn an iterator over the different <code>crate::pdb::Type</code> \xe2\x80\xa6D`The bitwise or (<code>|</code>) of the bits in two flags values.000000000000000CjRaw value which should be interpreted according to the \xe2\x80\xa6B`Value associated with the symbolCnSymbol\xe2\x80\x99s value whose interpretation depends on the symbol\xe2\x80\xa6AoThe actual environment variableAcThe register pushedDjIf the fixup is <code>ARM64X_RELOC_DELTA</code>, return the associated \xe2\x80\xa6BjThe constant value wrapped by this operandDkThe effective value that is relative to the current <code>rip/eip</code>\xe2\x80\xa6BnThe effective register wrapped by this operand21DmThe effective register as either: a <code>Reg</code> or a <code>SysReg</code>CmWrite back the current ELF binary into the file specified \xe2\x80\xa6CeWrite back the current MachO binary into the file \xe2\x80\xa6ClWrite back the current PE binary into the file specified \xe2\x80\xa6BlWrite the DWARF file to the specified outputnEntry when \xe2\x80\xa60BaThis structure represents the \xe2\x80\xa6BnInterface over <code>DW_TAG_atomic_type</code>0CkThis structure represents a <code>DW_TAG_atomic_type</code>0CfHeader for COFF files that contain more than 65536 \xe2\x80\xa60CkThis is the main interface to read and write ELF binary \xe2\x80\xa6CnThis is the main interface to read and write Mach-O binary \xe2\x80\xa6CjThis is the main interface to read and write PE binary \xe2\x80\xa6CkEnum that wraps all the executable formats supported by \xe2\x80\xa63CcGeneric interface representing a binary executable.32AmAn uninitialized common blockCcThis structure is used to tweak the ELF parser: \xe2\x80\xa6CbThis structure is used to tweak the PE parser: \xe2\x80\xa6BcStructure used to configure the \xe2\x80\xa600mSymbol table.CkThis entry is only revelant for version 2. It describes \xe2\x80\xa6CgThis structure exposes the main API to create DWARF \xe2\x80\xa60BaDescribes the function\xe2\x80\x99s epilog0mGlobal symbolAoNot visible to other componentsCiClass which represents the ELF\xe2\x80\x99s header. This class \xe2\x80\xa6ClStructure that represents the main Mach-O header (at the \xe2\x80\xa6CnStructure that represents the PE header (which follows the \xe2\x80\xa6ChThis enum represents the different types of COFF header.3210AeInterpreter pathname.fMIPS16BkThis structure represents a memory operand.000DjThis class represents a Method (<code>LF_ONEMETHOD</code>) that can be \xe2\x80\xa6BoThis structure represents an Objective-C Method10BkDevice drivers and native Windows processesfNetBSDBcData occupies no space in the file.B`Symbol\xe2\x80\x99s type is not specifiedClDoes not use structured exception handling (SEH). No SEH \xe2\x80\xa6BhThe relocation is used in an object fileBoSymbol is a data object (variable, array, etc.)DfRelocation of Mach-O object files (<code>.o</code>) wrapped by the \xe2\x80\xa60CmThis structure represents a relocation in a Mach-O object \xe2\x80\xa6CfWraps a memory offset as an integer offset or as a \xe2\x80\xa6BhTrait shared by all <code>Opcodes</code>ChThe relocation is associated with the PLT/GOT resolutionBmA packed exception entry that fits on 30 bitsBnInterface over <code>DW_TAG_packed_type</code>0CoThis structure represents a DWARF <code>packed</code> type (\xe2\x80\xa6CkThis structure represents a packed AArch64 exception entry.1oHitachi SH3 DSPBaMirror <code>DW_ATE_signed</code>lString tablelSymbol tableCdThe image file is a system file, not a user program.BnInterface over <code>DW_TAG_shared_type</code>0CkThis structure represents a <code>DW_TAG_shared_type</code>0BkRepresent primitive types (int, float, \xe2\x80\xa6)0CmThis class represents a primitive types (int, float, \xe2\x80\xa6) \xe2\x80\xa60jMirror \xe2\x80\xa60CjThis structure represents a struct-like type which can be:0BfStructure which reprents an ELF symbolCdStructure that represents a Symbol in a Mach-O file.BhStructure that represents a COFF symbol.2CeTrait shared by all the symbols in executable formats21BnInterface over <code>DW_TAG_thrown_type</code>0CkThis structure represents a <code>DW_TAG_thrown_type</code>0BoVariants optimized for the x86-64 architecture.AhA x86_64 exception entry0CkAdditional value that can be involved in the relocation \xe2\x80\xa6CiValue added to the segment\xe2\x80\x99s virtual address when boundAeAppend the given path0DeThe bitwise and (<code>&amp;</code>) of the bits in two flags values.000000000000000DfThe bitwise exclusive-or (<code>^</code>) of the bits in two flags \xe2\x80\xa6000000000000000A`Chain\xe2\x80\x99s valuesAeName of the subclientCjMessage digeset as a blob of bytes as described in the RFCCnReturn the digest (authentihash) if the underlying content \xe2\x80\xa6AcPE\xe2\x80\x99s authentihashAaEnable the loggerAiReturn export informationA`PE export moduleD`The bitwise or (<code>|</code>) of the bits in each flags value.000000000000000CkReturn fixups information, where the interpretation may \xe2\x80\xa6CnInteger that defines a special <em>flavor</em> for the thread.AeFormat of the importsAnCount for <code>/guardN</code>DkThe RVA of the module handle (in the <code>.data</code> section). It is \xe2\x80\xa6CaWhether the binary defines a non-executable stackAjReturn the main ELF headerAmReturn the main Mach-O headerCeNext header after the <code>Binary::dos_header</code>oThe COFF headerAcCOFF section moduleBeThis module represents PE\xe2\x80\x99s ImportsCmInsert a <code>path</code> at the given <code>position</code>0D`The bitwise or (<code>|</code>) of the bits in two flags values.000000000000000ChTrue if the instruction performs an arithmetic addition.0CcWhether all known bits in this flags value are set.000000000000000AoTrue if this binary targets iOSBmCheck if the given file is a <code>PDB</code>EnWhether the current binary is <strong>an executable</strong> and <strong>position </strong>\xe2\x80\xa6CnCheck if the relocation uses the implicit addend (i.e. not \xe2\x80\xa6ChReturn the <code>X509::issuer</code> used by this signerAbIssuer informationAnRebuild <code>DT_JMPREL</code>AbLength of the dataA`Range\xe2\x80\x99s lengthDkThe size of section data. The same as <code>SizeOfRawData</code> in the \xe2\x80\xa6BkNumber of entries in the table of contents.BiNumber of chains used for this hash tableCbOffset of the section <strong>in the file</strong>CeThe address of this relocation is bound to its offsetBlOriginal offset in the chain of this bindingClOffset of the command within the <em>Load Command Table</em>AbOffset of the dataAnOriginal offset in the payloadDiOffset of the command. It should point in the <code>__LINKEDIT</code> \xe2\x80\xa6ClOffset in the binary where the raw exception information \xe2\x80\xa6BiOffset of the content within the resource1CkThe offset of this string the in the COFF string table. \xe2\x80\xa6CfOffset of the current member in the struct/union/classAfThe addressing offset.AcThe original opcodeBiThe instruction opcode as defined in LLVM000000DiReturn the origin of the symbol: from <code>LC_SYMTAB</code> from the \xe2\x80\xa6BiThe segment\xe2\x80\x99s type (LOAD, DYNAMIC, \xe2\x80\xa6)AeParent scope (if any)CbRanges of virtual addresses owned by this functionCmReturn a list of address ranges owned by this compilation \xe2\x80\xa6nThe given path0CeThe intersection of a source flags value with the \xe2\x80\xa6000000000000000BdShift count used in the bloom filterBhSignerInfo as described in the RFC #2985DjThe file name suffix of the subCache file (e.g. <code>.25.data</code>, \xe2\x80\xa6BnSymbol associated with the relocation (if any)0BkSymbol associated with the binding (if any)BbSymbol associated with this exportCjSymbol address. Some values have a special meaning and \xe2\x80\xa63DgSymbol referenced by <code>AuxiliaryCLRToken::symbol_idx</code> (if \xe2\x80\xa6AnRebuild <code>DT_SYMTAB</code>CjThe value that should be set at the address pointed by \xe2\x80\xa6AnFor instance, given this stub:DfThe bitwise exclusive-or (<code>^</code>) of the bits in two flags \xe2\x80\xa6000000000000000BlWhether the EBP register has been allocated.DlVerify that this certificate has been used <strong>to trust</strong> the \xe2\x80\xa6AhAn ARM64 exception entry0AfAn AArch64 instruction0BbMirror <code>DW_ATE_address</code>AoAlpha AXP, 64-bit address spaceBiARM64EC hybrid code (compatible with x64)BbMirror <code>DW_ATE_boolean</code>ClAuxiliary Format 2: .bf and .ef Symbols from the PE-COFF \xe2\x80\xa6AiCurrent version (default)ClBindings defined in <code>DYLD_CHAINED_FIXUPS</code> command0CmThis structure represents a binding operation coming from \xe2\x80\xa6BoInterface over <code>DW_TAG_coarray_type</code>0ClThis structure represents a <code>DW_TAG_coarray_type</code>0DlTrait shared by <strong>all</strong> the load command: <code>Commands</code>BgVisibility is specified by binding typeCgDefault behavior that tries to follow the Microsoft \xe2\x80\xa6ChThe relocation is used for regulard data/code relocationB`Information for dynamic linking.AlDynamic linking information.CnThis structure wraps options to tweak the generated output \xe2\x80\xa60B`The different supported dialectsBoInterface over <code>DW_TAG_dynamic_type</code>0ClThis structure represents a <code>DW_TAG_dynamic_type</code>0AaAn EFI ROM image.CiMatch the result <code>Elfxx_Ehdr.e_ident[EI_DATA]</code>ClEnum that represents the different variants of a dynamic \xe2\x80\xa6CmThis enum exposes the different debug entries that can be \xe2\x80\xa6gFenixOSgFreeBSDmGeneric value0mFallback itemAbFallback structure01nEntry when \xe2\x80\xa6ClGeneric entry for all the other <code>IMAGE_DEBUG_xxx</code>1AmGeneric type (fallback value)0CiA generic instruction that doesn\xe2\x80\x99t have an extended \xe2\x80\xa60lGeneric noteCcGeneric structure for the dynamic entries whose \xe2\x80\xa6CnThis structure represents a generic entry where fixups are \xe2\x80\xa6CfGeneric structure for types that do not required a \xe2\x80\xa6CbThis structure represents a generic type (like \xe2\x80\xa6AcGeneric InstructionC`Structure that wraps the GNU-hash implementationAaPublic key schemeB`Entry for <code>DT_NEEDED</code>0CmStructure that represents a dynamic entry associated with \xe2\x80\xa6mMIPS with FPUnNovell ModestoCmThis manager abstracts the tree representation to provide \xe2\x80\xa6AfDo not bind the image.gOpenBSDgOpenVMSAlThe OS/2 character subsytem.CaThe different <code>x86_64</code> unwind opcodes.CjTrait shared by <strong>all</strong> <code>Operands</code>000AfPower PC little endiannUnused segmentAbMirror `LF_POINTER0ClThis structure represents a <code>LF_POINTER</code> PDB typeBoInterface over <code>DW_TAG_pointer_type</code>0DhThis structure represents a <code>DW_TAG_pointer_type</code> DWARF type.BgMirror <code>DW_TAG_pointer_type</code>01311BcA PowerPC (ppc64/ppc32) instruction0DgThe <em>purpose</em> of a relocation defines how this relocation is \xe2\x80\xa6A`Regular section.AkRISC-V 32-bit address spaceAkRISC-V 64-bit address spaceCmRSA scheme with an alternative implementation for signing \xe2\x80\xa6AhRegular (default) header0DhClass that represents the <code>LC_ROUTINE/LC_ROUTINE64</code> commands.0AoStructure that wraps an RSA key0BaEntry for <code>DT_RUNPATH</code>0CmStructure that represents a dynamic entry associated with \xe2\x80\xa6AjSymbol refers to a sectionBjCount based on sections (not very reliablegSolarisAiNote for SystemTap probesAaUNIX System V ABIBhStructure wich represents an ELF SectionBlThis structure defines a regular PE section.1CfTrait shared by all the sections in executable formats1BgStructure which reprents an ELF segmentDfClass which represents a <code>LC_SEGMENT/LC_SEGMENT_64</code> command10BjInterface over <code>DW_TAG_typedef</code>0DcThis structure represents a <code>DW_TAG_typedef</code> DWARF type.BbMirror <code>DW_TAG_typedef</code>0DbThis structure represents a typedef (<code>DW_TAG_typedef</code>).20CjFallback/default kind when the category is not recognized.AeAn unknown subsystem.CkGeneric structure when the command is not recognized by \xe2\x80\xa6nEntry when \xe2\x80\xa60BgOperand that is not correctly supported0002CmThis class represents an special dynamic relocation where \xe2\x80\xa6CeMatch the result of <code>Elfxx_Ehdr.e_version</code>CnThis structure represents a version for the backend or the \xe2\x80\xa6CgThis enum wraps the dyld\xe2\x80\x99s git tags for which the \xe2\x80\xa6lIntel syntaxBfAArch64 architecture-related namespaceBnAddress where the relocation should take place0BiAddress of the function (if not imported)BdVirtual base address of this sectionAfAddress of the bindingAiThe address of the exportBmThe virtual address where the stub is locatedCdAddress of the current exported function in the DLL.DfReturn the address of the function (<code>DW_AT_entry_pc</code> or \xe2\x80\xa6AhAddress of the variable.CkVirtual address where this method is implemented in the \xe2\x80\xa6B`In-memory address of the libraryCmThe in-memory address where this dyld shared cache region \xe2\x80\xa6AjAddress of the instruction0ClThe symbol\xe2\x80\x99s binding determines the linkage visibility \xe2\x80\xa6AaBucket\xe2\x80\x99s valuesAbHash bucket valuesAj0xFFFF means not availableDcIf <code>UnwindFlags::CHAIN_INFO</code> is set, this attributes \xe2\x80\xa6CnRepresent the whole chain of all (parent) scopes using the \xe2\x80\xa6CnReturn an iterator over the different Objective-C classes (\xe2\x80\xa6BjContent of the section as a slice of bytesBjContent of the segment as a slice of bytesAfContent of the sectionCcThe raw content of this segment as a slice of bytesBlContent of the signature as a slice of bytes0AoRaw content as a slice of bytesAoRaw payload as a slice of bytes0AkPayload as a slice of bytes111AoOriginal payload of the commandBmContent bytes wraped with this data directoryA`Resource contentAeDefault configuration0BjPrevent any log message from being printedAlRebuild <code>DT_HASH</code>AnRebuild <code>DT_STRTAB</code>AlEnd of the code range (RVA).BlIterator over the <code>DataCodeEntry</code>DbIterator over the different <code>RuntimeTableEntry</code> entriesDdAn iterator over the different POGO elements: <code>PogoEntry</code>BjIterator over the <code>ImportEntry</code>BoIterator over the Relocation <code>Entry</code>DkIterator over the DelayImport\xe2\x80\x99s entries (<code>DelayImportEntry</code>\xe2\x80\xa6DeIterator over the different <code>Entry</code> exported by this tableDdReturn an iterator over the <code>RichEntry</code> within the headerDkIterator over the <code>crate::macho::ExportInfo</code> associated with \xe2\x80\xa6DeReturn an iterator over the <code>crate::macho::ExportInfo</code> \xe2\x80\xa6CkWhether the builder should reconstruct the export table \xe2\x80\xa6CkExecutable formats generic traits (LIEF\xe2\x80\x99s abstract layer)ChAn image-relative pointer to either the function\xe2\x80\x99s \xe2\x80\xa6CnThis module exposes the different headers that we can find \xe2\x80\xa6CaReturn the data directory associated with the IATEiReturn the imports as an <strong>iterator</strong> over the <code>Import</code> structureCmWhether the builder should reconstruct the imports table. \xe2\x80\xa6BoReturn an iterator over the enclave\xe2\x80\x99s importsDcTrue if target instruction is a <code>call</code>, false otherwise.BaTrue if the instruction is a call0BmCheck if the relocation uses the explicit \xe2\x80\xa6BbTrue if the instruction is a trap.0CkReturn the library in which this symbol is defined (if any)BlLibrary associated with the binding (if any)AdLIEF\xe2\x80\x99s logging APICkThe targeted machine architecture like ARM, x86, AMD64, \xe2\x80\xa6BfThe machine type targeted by this COFFCjReturn this list of all the attributes defined in this \xe2\x80\xa60DfIterator over the different <code>crate::pdb::types::Method</code> \xe2\x80\xa6DeIterator over the different <code>Method</code> defined by this classDiModification time of the library matching <code>stat.st_mtime</code>, \xe2\x80\xa6DgNumber of <code>crate::macho::Commands</code> present in the Mach-O \xe2\x80\xa6BiNumber of bucket used for this hash tableD`Iterator over the unwind code which outputs <code>Opcodes</code>AaThe ordinal value0CbOrdinal value associated with this exported entry.BlReturn the original overlay data of the fileCfWhether the builder should write back any overlay dataBgContent of the section\xe2\x80\x99s padding areaAkPadding value (should be 0)BePadding alignment value (should be 0)BeReturn the raw content of the commandBeDebug data associated with this entryBjIf <code>ImageBddInfo::version</code> is 1BlReturn the raw representation of this symbolBfPowerPC architecture-related namespaceAmThe purpose of the relocationBnThe original raw signature as a slice of bytesClTry to resolve the value of the relocation. The returned \xe2\x80\xa6DbReturn the <code>LC_ROUTINE/LC_ROUTINE64</code> command if presentAdFunction end addressCgThe section in which the relocation is applied (if any)BkSection associated with the symbol (if any)BlSection associated with the section (if any)BgThe section where debug data is locatedClThe (optional) section in which the data associated with \xe2\x80\xa6BnThe section where the TLS structure is locatedBkSection in which the relocation takes placeBlSection associated with this symbol (if any)AaPE section moduleAcCOFF section moduleCgSegment command associated with the relocation (if any)AmSegment bound to this sectionBlSegment associated with the binding (if any)BaSet or change the TLS informationDkIterator over the signer <code>SignerInfo</code> defined in the PKCS #7 \xe2\x80\xa60ClIterator over the sources files (as string) that compose \xe2\x80\xa6AcSubject informationDkThe symbol-table index of <code>sym2</code>, the symbol to be linked if \xe2\x80\xa6DkReturn an iterator over the different <code>crate::macho::Symbol</code> \xe2\x80\xa6CkReturn an iterator over the binary (COFF) symbols (if any).BbIterator over the COFF\xe2\x80\x99s symbolsCfIterator over the symbols associated with this sectionBmReturn the data directory associated with TLSCjGenerate a header-like of all the Objective-C metadata \xe2\x80\xa6CeGenerate a header-like string for this specific class0ChWhether the function uses structured exception handling.AjReturn the current versionA`Version revision0AcVersion as a tuplceAhVersion of the structurekShould be 10BaX.509 version. (1=v1, 2=v2, 3=v3)CdVersion number of the unwind data, currently 1 or 2.CkDescribes the version of the remaining <code>.xdata</code>.4C`The version of this header which must be &gt;= 2CkVersion of the <em>tool</em> as a string. For instance, \xe2\x80\xa6BkVersion of the language (e.g. 17 for C++17)BbVersion of dyld used by this cacheBlCreate a new Directory node with the given dD`Structure which represents the <code>LC_ATOM_INFO</code> command0AcMirror `LF_BITFIELD0ChThis structure wraps a <code>LF_BITFIELD</code> PDB type0mNuxi CloudABIBjCrashpad note used by the Chromium projectCkStructure that represents the (generic) Debug CodeView (\xe2\x80\xa6CkEnum that wraps all the different Mach-O load commands (\xe2\x80\xa60Aedyld-940 (2021-02-09)CoStructure that represents the <code>LC_DYLD_INFO</code> and \xe2\x80\xa60CkStructure that represents the Mach-O linker, also named \xe2\x80\xa60AmElliptic-curve Diffie-HellmanCbThe function is exported by the binary and the \xe2\x80\xa6CnThis structure represents the stack frame layout for a x86 \xe2\x80\xa6CnThe type of the underlying ELF file. This enum matches the \xe2\x80\xa6BoStructure that represents a binary\xe2\x80\x99s functionAdMirror `LF_PROCEDURE0CiThis structure wraps a <code>LF_PROCEDURE</code> PDB typeCkThis structure represents a DWARF function which can be \xe2\x80\xa6BjMirror <code>DW_TAG_subroutine_type</code>DjThis structure represents an <strong>editable</strong> DWARF function (\xe2\x80\xa61BnThis structure represents a function type (\xe2\x80\xa664310AeGNU-style hash table.BbImage supports Control Flow Guard.CjThe value of the enclave image identifier of the image \xe2\x80\xa6DcThe function is <strong>imported</strong> by the binary and the \xe2\x80\xa6B`Defined by processor supplementsBoBindings infered from the indirect symbol table0CmThis structure represents a binding operation coming from \xe2\x80\xa6CfLanguages supported by the DWARF (v5) format. See: \xe2\x80\xa6CcThis structure is the main interface to inspect \xe2\x80\xa60AcMirror `LF_MODIFIER0ChThis structure wraps a <code>LF_MODIFIER</code> PDB type0EhTrait that is shared by both <code>Node::Data</code> and <code>Node::Directory</code>\xe2\x80\xa6BfTrait shared by all <code>Notes</code>CgThis enum represents the different kind of operands \xe2\x80\xa6000AiProgram-defined contents.BlPlatforms supported by the dyld shared cacheCmThis class represents a <code>@property</code> in Objective-C0CkThis class represents an Objective-C <code>@protocol</code>0AlRISC-V 128-bit address spaceBmThis structure represents a register operand.000CeInterface over <code>DW_TADW_TAG_restrict_type</code>0CmThis structure represents a <code>DW_TAG_restrict_type</code>0BfNo associated section (inactive entry)BdEstablish the frame pointer registerCgEstablish the frame pointer register by setting the \xe2\x80\xa6CkStructure that wraps information about the dimension of \xe2\x80\xa6BnInterface over <code>DW_TAG_string_type</code>0CkThis structure represents a <code>DW_TAG_string_type</code>0CcThis class represents a subcache in the case of \xe2\x80\xa60BgThis structure wraps the sysv-hash infoBcMirror <code>DW_ATE_unsigned</code>CiAn extended exception entry that has variable length dataCiThis class represents an unpacked AArch64 exception entryDkReturn an iterator of the variable <code>DW_TAG_variable</code> defined \xe2\x80\xa60C`Interface over <code>DW_TAG_volatile_type</code>0CmThis structure represents a <code>DW_TAG_volatile_type</code>0AlZero fill on demand section.ClRedefine this version as local by dropping its auxiliary \xe2\x80\xa6DiAssemble <strong>and patch</strong> the provided assembly code at the \xe2\x80\xa6AkAssembly/Disassembly ModuleCf<code>IMAGE_AUX_SYMBOL_TYPE</code> which should be \xe2\x80\xa6DcFind the <code>IMAGE_BDD_INFO</code> associated with the given infoDiReturn an iterator over the bindings located in <code>DyldInfo</code> \xe2\x80\xa6AnIterator over the bindings \xe2\x80\xa6DkReturn an iterator over the <code>crate::macho::BindingInfo::Dyld</code>\xe2\x80\xa6BaBuild number of the tool (if any)DhCategory of the symbol according to the <code>LC_DYSYMTAB</code> commandCmReturn the data directory associated with the certificate \xe2\x80\xa6ClThe image file checksum. The algorithm for computing the \xe2\x80\xa6CkThe checksum for communal data. It is applicable if the \xe2\x80\xa6AmIterator on node\xe2\x80\x99s childrenCiRVA to the array that describes architecture-specific \xe2\x80\xa6BiReturn an iterator over the different \xe2\x80\xa6CmWhether all set bits in a source flags value are also set \xe2\x80\xa6000000000000000BlThe CPU architecture targeted by this binaryBkThe encryption system. 0 means no encryptedB`Try to demangle the given input.DkReturn the raw data between the <code>Binary::dos_header</code> and the \xe2\x80\xa6CmWhether the builder should write back dos stub (including \xe2\x80\xa6DfReturn the <code>LC_LOAD_DYLINKER/LC_ID_DYLINKER</code> command if \xe2\x80\xa6AoReserved for use by the system.AnThe encoding of the relocationCgDescribe how the base type is encoded and should be \xe2\x80\xa6BfThe path to the <code>.pdb</code> fileAgThe associated filenameCiFilename of the dyld shared file associated with this \xe2\x80\xa6CdFull path to the original dyld shared cache file \xe2\x80\xa6DkTry to find the <code>SymbolVersionAuxRequirement</code> with the given \xe2\x80\xa6AkFix Objective-C informationCmReturn the type of the note. This type does not match the \xe2\x80\xa6AfType of the relocationAcType of the sectionCmThe symbol\xe2\x80\x99s type provides a general classification for \xe2\x80\xa6A`Type of the dataBgThe format of the debugging information4CjThe type of the data directory which is defined by its \xe2\x80\xa6CkThe type of identifier of the image that must match the \xe2\x80\xa66AfType of this attributeB`Return the type of the parameterCbType of the <strong>index</strong> for this array.AjType of the current memberB`Return the type of this variableAfThe current scope type4BaReturn GNU Hash info (if present)B`Rebuild <code>DT_GNU_HASH</code>CgThe image identifier that the author of the enclave \xe2\x80\xa6CkThe image identifier of the primary module for the enclave.AlTrue if the binary is 32-bitAlTrue if the binary is 64-bitBoWhether all bits in this flags value are unset.000000000000000BaTrue if this binary targets macOSBdSize of the public modulus (in bits)BgReturn the underlying public-key schemeoSource languageBkOriginal Language of this compilation unit.BkRebuild the <code>__LINKEDIT</code> segmentCeReturn the debug location where this type is defined.CnReturn the manifest as a string. This manifest matches the \xe2\x80\xa6AeMax memory protectionBkInstruction mnemonic (e.g. <code>br</code>)0AeThe original name rvaBgAddress of the ASCII DLL\xe2\x80\x99s name (RVA)CoReturn an iterator over the <code>x86::Operands</code> operandsDcReturn an iterator over the <code>aarch64::Operands</code> operandsCfReturn the platform for which this Mach-O has been \xe2\x80\xa6C`Platform targeted by this cache (e.g. vision-os)DiOffset relative to <code>Relocation::virtual_address</code> where the \xe2\x80\xa6AdOffset in the prologBeCount for <code>Pre-VC++ 11.00</code>CmInformation about the program (or library) that generated \xe2\x80\xa6CaAccording to the official specs, a reserved valueAgReserved for future useBhReserved value. Should be <code>0</code>BfAdditional bitmask to be defined laterBkReserved for future expansion. Should be 0.AeReserved. Should be 0AlReserved value (should be 0)0Do<strong>If</strong> the underlying public-key scheme is RSA, return the RSA \xe2\x80\xa6CkReturn the data directory associated with the resources \xe2\x80\xa6AkSize in bytes taken by RVAsDgReturn an iterator over the <code>crate::elf::Section</code> of the \xe2\x80\xa6DkReturn an iterator over the different <code>crate::macho::Section</code>\xe2\x80\xa6DfIterator over the <code>crate::macho::Section</code> owned by this \xe2\x80\xa6DdReturn the sections as an iterator over the <code>Section</code> \xe2\x80\xa6CmIterator over the different sections located in this COFF \xe2\x80\xa6DgReturn an iterator over the <code>crate::elf::Segment</code> of the \xe2\x80\xa6BiReturn an iterator over the different \xe2\x80\xa6CiSet the global address of this variable. Setting this \xe2\x80\xa6AfSet a new library nameBaChange or set the name of the DLLCgSwitch to a file-based logger (instead of stderr-based)CnDefine the number of bytes required to hold an instance of \xe2\x80\xa6DjDefine the overall size which is equivalent to the <code>sizeof</code> \xe2\x80\xa6BdSet the type of the current variableAnName of the umbrella frameworkB`End time of certificate validityBmCreate a new dynamic entry with the given TagAeException Index tableCkThe value of the enclave author identifier of the image \xe2\x80\xa6CjGeneric trait shared by all <code>BindingInfo</code> itemsDeThis class represents an attribute (<code>LF_MEMBER</code>) in an \xe2\x80\xa6CjThis enum exposes the different attributes that can be \xe2\x80\xa61ChThis structure represents information wrapped by the \xe2\x80\xa6CbSection contains symbols that are to be coalesced.CnCoredump that contains a copy of all the auxiliary vectors \xe2\x80\xa6FeTrait shared by <code>Structure</code>, <code>Class</code>, <code>Union</code> or <code>Packed</code>FkTrait shared by <code>Structure</code>, <code>Class</code>, [<code>Union</code>] and <code>Interface</code>1Afdyld-95.3 (2007-10-30)AjMain interface over a PDB.CkThis class represents a DWARF debug information. It can \xe2\x80\xa6CbThis enum wraps either a PDB or a DWARF debug info0CiThis class provides a generic interface for accessing \xe2\x80\xa632A`A directory node0DhStructure which represents the DosHeader, the <strong>first</strong> \xe2\x80\xa60BgGeneric trait shared by all DWARF typesCkThe value of the enclave family identifier of the image \xe2\x80\xa6BfThis structure represents a FAT Mach-O0DhMatch <code>NT_HWCAP</code>: Synthetic hardware capabilities informationAeGNU indirect functionAkRead-only after relocation.AmIndicates stack executabilityDhOnly check that <code>crate::pe::Binary::authentihash</code> matches \xe2\x80\xa6BoThis structure represents an immediate operand.000CaInterface over <code>DW_TAG_immutable_type</code>0CnThis structure represents a <code>DW_TAG_immutable_type</code>0AdMirror `LF_INTERFACE0CiThis structure wraps a <code>LF_INTERFACE</code> PDB typeCaInterface over <code>DW_TAG_interface_type</code>0CnThis structure represents a <code>DW_TAG_interface_type</code>20oMIPS16 with FPUAgImage is NX compatible.AnThe POSIX character subsystem.AcPower PC big endianAlPower PC with floating pointBoVisible in other components but not preemptableChThis structure represents a parameter of the current \xe2\x80\xa6CbThis structure represents a function\xe2\x80\x99s parameterDdStructure which reprents an entry in the <code>Pogo</code> debug \xe2\x80\xa6AgNote for QNX Stack infoCiModule requests that the OS enable return flow protectionCmModule requests that the OS enable return flow protection \xe2\x80\xa6CaInterface over <code>DW_TAG_reference_type</code>0CnThis structure represents a <code>DW_TAG_reference_type</code>0CgEstablish the frame pointer register by setting the \xe2\x80\xa6BnThis structure holds shift info (type + value)AdMirror `LF_STRUCTURE0CiThis structure wraps a <code>LF_STRUCTURE</code> PDB typeCaInterface over <code>DW_TAG_structure_type</code>0DhThis structure represents a <code>DW_TAG_structure_type</code> DWARF \xe2\x80\xa620CmClass that represents the SubClient command. Accodring to \xe2\x80\xa60CkThe value of the enclave unique identifier of the image \xe2\x80\xa6CnEntry associated with <code>IMAGE_DEBUG_TYPE_VC_FEATURE</code>DjThis structure represents the <code>IMAGE_DEBUG_TYPE_VC_FEATURE</code> \xe2\x80\xa6AiMIPS little-endian WCE v2lIntel syntaxCfAdd a new child node to the current and return the \xe2\x80\xa6CiAdd the given export and return the newly created and \xe2\x80\xa6B`Add a label at the given addressClAdd an enum value by specifying its name and its integer \xe2\x80\xa6BjAlgorithm used for hashing the PDB contentAaSection alignmentBcThe offset alignment of the segmentBaSection alignment as a power of 2DfName of the architecture targeted by this cache (<code>x86_64h</code>)CmRedefine this version as global by dropping its auxiliary \xe2\x80\xa6CgReturn the <code>LC_ATOM_INFO</code> command if presentCnAccording to the official PE specifications, this value is \xe2\x80\xa6Dn(raw) property\xe2\x80\x99s attributes (e.g. <code>T@&quot;NSString&quot;,C,D,N</code>)AkThe simple (base) data typeCaList of callbacks associated with the current TLSCjReturn the code page that is used to decode code point \xe2\x80\xa6AhThe size of the functionCfThe method used to count the number of dynamic symbols0AiSize of the raw signature0AlSize of the (raw) array (\xe2\x80\xa6ChSize of the <code>LC_DYLD_CHAINED_FIXUPS</code> payload.CfSize of the <code>LC_DYLD_EXPORTS_TRIE</code> payload.BhSize of the functions list in the binaryAcSize of the payload000CiReturn the data directory associated with the debug tableDbReturn the <code>DataDirectory</code> associated with this import.BeThe data directory describing the TLSDeReturn the <code>LC_DYLD_INFO/LC_DYLD_INFO_ONLY</code> command if \xe2\x80\xa6BcModule for the PE exception supportChThe family identifier that the author of the enclave \xe2\x80\xa6CgThe family identifier of the primary module for the \xe2\x80\xa6BgSize of this segment in the binary fileCjDefine the object file type. (e.g. executable, library\xe2\x80\xa6)CkReturn the type of the Mach-O file (executable, object, \xe2\x80\xa6ClIf nonzero, then the function uses a frame pointer (FP), \xe2\x80\xa6AjConvert from a bits value.000000000000000BjCreate a Signature from a PKCS#7 file pathD`The bitwise or (<code>|</code>) of the bits in each flags value.000000000000000ClGet a flags value with the bits of a flag with the given \xe2\x80\xa6000000000000000C`Iterator over the functions found in this binaryCjAddresses of every function entry point in the executable.CdIterator over the functions implemented in this COFFDiReturn an iterator over the <code>crate::pdb::Function</code> defined \xe2\x80\xa6CfIterator over the functions defined by the class-like.0DkReturn an iterator over the functions <code>Function</code> implemented \xe2\x80\xa6DkIAT index of the corresponding import. <code>0x7FFF</code> is a special \xe2\x80\xa60CnValue of the current entry in the Import Address Table. It \xe2\x80\xa6CgValue of the current entry in the Import Address Table.BjOriginal value in the import lookup table.CfDefault base address where the binary should be mappedCiThe preferred base address when mapping the binary in \xe2\x80\xa6AiInitial memory protectionClTrue if this binary is compiled in ARM64X mode (contains \xe2\x80\xa6BcTrue if the instruction is a branch0BcTrue if the instruction is a return0DjReturn an iterator over the <code>crate::macho::commands::Dylib</code> \xe2\x80\xa6DfReturn an iterator over the different <code>Dylib</code> libraries \xe2\x80\xa6CfNumber of bloom filters used. It must be a power of 2.B`Other information such as an urlAnThe number of local variables.CaThe number of relocation entries for the section.BnSize of the data referenced by the note_offsetCiMemory page size if the binary uses a non-standard value.0CeGet the default memory page size according to the \xe2\x80\xa6BdThe number of bytes in the function.CnReturn an iterator over the Objective-C protocols declared \xe2\x80\xa6DiIterator over the different <code>Protocol</code> implemented by this \xe2\x80\xa6DgAccording to the official <code>loader.h</code> file, this value is \xe2\x80\xa6CiSee: <code>LoadConfiguration::dependent_load_flags</code>1lMust be zeroCkThis value is only present for 64 bits Mach-O files. In \xe2\x80\xa6BkReturn the root of the PE\xe2\x80\x99s resource treeChWhether the builder should regenerate the resources treeCmThis module contains the different structures involved in \xe2\x80\xa6AfFunction start address0CjThe COMDAT selection number. This is applicable if the \xe2\x80\xa6AhChange the logging levelAfChange the rpath valueChThe 32-bit signature to verify against the .pdb file \xe2\x80\xa6AkUnderlying Signature objectB`The signature of the certificateCgThis module wraps the PKCS #7 PE authenticode signatureC`Return information about the size of this array.AhStart of the code range.CjReturn an interator over the subcaches associated with \xe2\x80\xa6CdTarget subsystem like Driver, XBox, Windows GUI, \xe2\x80\xa6BiReturn sysv-hash information (if present)DgThe symbol-table index of the corresponding <code>.bf</code> (begin \xe2\x80\xa6BoDate and Time when the shared library was builtCbThe time and date when the debug data was created.CiThe timestamp of the DLL to which this image has been \xe2\x80\xa6CbThe time and date that the export data was createdCiRepresentation of the current instruction in a pretty \xe2\x80\xa6BdPretty representation of the operand0001DjReturn an iterator of variables (<code>DW_TAG_variable</code>) defined \xe2\x80\xa6DoReturn an iterator over the variables defined in the <strong>global</strong>\xe2\x80\xa6ChThe offset of this subcache from the main cache base \xe2\x80\xa6CmRVA where this unpacked data is located (usually pointing \xe2\x80\xa6nAMD HSA runtimCbThe chained info payload references a previous \xe2\x80\xa6CmThis structure wraps comdat information which is composed \xe2\x80\xa6CaThe function is associated with Debug informationBbThe function acts as a destructor.BfSection contains DTrace Object Format.Agdyld-195.5 (2011-07-13)Agdyld-239.3 (2013-10-29)Agdyld-421.1 (2016-09-22)DbStructure that represents the <code>LC_DATA_IN_CODE</code> command0BnGeneric trait shared by all DWARF editor typesCjThis structure represents an export (info) in a Mach-O \xe2\x80\xa60CjThis structure is used to tweak the extraction process \xe2\x80\xa6BbPointers to termination functions.mUnique symbolAhGNU version definitions.AjGNU symbol versions table.AlNote specific to Go binariesBePointers to initialization functions.AjA RIP/EIP-relative operand0CeThis structure represents a RIP/EIP-relative operand.AeA PC-relative operand0C`This structure represents a PC-relative operand.20BcPush a nonvolatile integer registerCjPush a nonvolatile integer register, decrementing RSP by 8BbRSA Probabilistic signature schemeCeStructure that describes architecture-specific rangesBjStructure which reprents an ELF relocationClEnum that represents the different to encode/represent a \xe2\x80\xa6D`Class which represents the <em>Base Relocation Block</em> We \xe2\x80\xa6BgThis class represents a COFF relocation3210CiStructure which represents the not-so-documented rich \xe2\x80\xa60B`Standalone (embedded) applicatioBgSignerInfo as described in the RFC 23150CbInterface over <code>DW_TAG_subroutine_type</code>0CoThis structure represents a <code>DW_TAG_subroutine_type</code>0ChThis value is used for versions of dyld not publicly \xe2\x80\xa6DhThis structure represents the <code>UNWIND_INFO</code> which records \xe2\x80\xa6AlStructure that wraps the \xe2\x80\xa60DhVisibility of the symbol. This enum matches the <code>STV_xxx</code> \xe2\x80\xa6mA WDM driver.CmAdd an imported library (i.e. <code>DLL</code>) to the binaryBgAdd a member to the current struct-likeDiIterator over the different <code>crate::pdb::types::Attribute</code> \xe2\x80\xa6AjOffset into the BDD regionDlOffset of the current member in <strong>bits</strong> the struct/union/classCkThe total number of bytes in the base relocation block. \xe2\x80\xa6DdBuild information represented by the <code>S_BUILDINFO</code> symbolB`Path to the build tool (e.g. \xe2\x80\xa6CnNumber of 32-bit words needed to contain all of the unwind \xe2\x80\xa6DgThe bitwise negation (<code>!</code>) of the bits in a flags value, \xe2\x80\xa6000000000000000AnThe size of the encrypted areaChReturn the debug info if present. It can be either a \xe2\x80\xa6CeThe intersection of a source flags value with the \xe2\x80\xa6000000000000000BcDosHeader which starts the PE filesClThis function returns the size of an element in the case \xe2\x80\xa6AeExecutable entrypointAeBinary\xe2\x80\x99s entrypointFaOffset of the <em>main</em> function <strong>relative</strong> to the <code>__TEXT</code> segmentBfRVA of the entry point for this range.DfIterator over the exception (<code>_RUNTIME_FUNCTION</code>) functionsCjReturn the data directory associated with the export tableBbRebuild <code>DT_FINI_ARRAY</code>CgFix memory accesses performed outside the dylib\xe2\x80\x99s \xe2\x80\xa6AkSize of the allocated stackBgVariable that indicates the frame type.CfParse a resource tree from the provided slice. The \xe2\x80\xa6CjReturn the data directory associated with the import tableBbRebuild <code>DT_INIT_ARRAY</code>CmWhether any set bits in a source flags value are also set \xe2\x80\xa6000000000000000CnTrue if this binary is compiled in ARM64EC mode (emulation \xe2\x80\xa6CnTrue if the instruction prevents executing the instruction \xe2\x80\xa60BjTrue if the instruction is doing a bitcast0BgTrue if the instruction is a comparison0Bo<code>True</code> if it is an import by ordinal0BdTrue if the instruction is a syscall0BlYield a set of contained named flags values.000000000000000CiReturn the principal dyld shared cache in the case of \xe2\x80\xa6BiNumber of buckets used in this hash tableChThe number of images in the array of images that the \xe2\x80\xa6BoNumber of symbols (including auxiliary symbols)ClThe maximum number of threads that can be created within \xe2\x80\xa6DdReturn an iterator over the <code>Parameters</code> of this functionBj<code>Parameters</code> of this subroutineCo<code>Parameters</code> associated with the underlying templateAgParse PE resources tree0CbPrint the current resources a tree in a pretty \xe2\x80\xa6CeIterator over the <code>Property</code> of this classCeIterator over the properties defined in this protocolAeFormat of the pointerAkArchitecture for this rangeClThis module includes the different structures related to \xe2\x80\xa6AfCOFF relocation moduleAnRemove the TLS from the binaryAnSet or change the export tableCnSet the ranges of addresses owned by the implementation of \xe2\x80\xa6DhReturn an iterator over the <code>signature::Signature</code> if the \xe2\x80\xa6AfThe initial stack sizeCeThe intersection of a source flags value with the \xe2\x80\xa6000000000000000CgReturn the <code>LC_SUBCLIENT</code> command if presentAnRebuild <code>DT_VERDEF</code>AnRebuild <code>DT_VERSYM</code>BlSymbol index associated with this relocationAiIndex in the symbol tablejTarget CPUCjByte offset from the start of the file to the table of \xe2\x80\xa6ChThe size of the executable code for the function itself.AcUnwind info addressBbStart time of certificate validityAaSymbol visibilityBnCreate a new Rpath entry from a slice of pathsC`Create a new RunPath entry from a slice of pathsCkAllocate a large-sized area on the stack. There are two \xe2\x80\xa6CmAllocate a small-sized area on the stack. The size of the \xe2\x80\xa6BfPacked relocations (Android specific).nEntry when \xe2\x80\xa60CiThis class wraps fixups associated with the (special) \xe2\x80\xa6BhPlatform architecture compatibility infoChThis enum exposes all the different types of binding \xe2\x80\xa60AaLinux TMS320C6000BaThe function acts as constructor.CgCoredump that wraps the <code>fpregset</code> structureCeCoredump that wraps the <code>psinfo</code> structureD`Entry associated with the <code>IMAGE_DEBUG_TYPE_CODEVIEW</code>AkCodeView PDB specializationChAttribute for the OID: <code>1.2.840.113549.1.9.3</code>CeInterface over the structure described by the OID \xe2\x80\xa6Ahdyld-1042.1 (2022-10-19)Ahdyld-1231.3 (2024-09-24)Ahdyld-360.14 (2015-09-04)CnEnum that describes the different methods that can be used \xe2\x80\xa6BhThis strucure describes an epilog scope.CjZero fill on demand section (that can be larger than 4 \xe2\x80\xa6DhMatch <code>NT_GNU_ABI_TAG</code>: Operating system (OS) ABI informationAgGNU version references.BjAttribute for an OID not supported by LIEFCfInterface over an attribute for which the internal \xe2\x80\xa6ClLink editor is to sort the entries in this section based \xe2\x80\xa6CdSection with only pairs of function pointers for \xe2\x80\xa6CnStructure that represents an entry (i.e. an import) in the \xe2\x80\xa6CbThis structure represents an ARM/Thumb instructionCbThis structure represents a x86/x86-64 instructionCkThis structure represents a Mips instruction (including \xe2\x80\xa6CeThis structure represents a PowerPC (ppc64/ppc32) \xe2\x80\xa6C`This structure represents an AArch64 instructionDgThis trait is shared by all <code>Instructions</code> supported by LIEFCeThis structure represents a RISC-V (32 or 64 bit) \xe2\x80\xa6BmThis structure represents an eBPF instruction27654310BaLoongArch 32-bit processor familyBaLoongArch 64-bit processor familyAhRuntime procedure table.DgThis structure represents a <code>dyld_cache_mapping_info</code> entry.0CjThis structure represents the PDB Checksum debug entry \xe2\x80\xa6BjVariants that apply on a per-process basisCkPush a nonvolatile integer register, decrementing RSP by 8.CmCount based on PLT/GOT relocations (very reliable but not \xe2\x80\xa6ClSave a nonvolatile integer register on the stack using a \xe2\x80\xa6CjSave all 128 bits of a nonvolatile XMM register on the \xe2\x80\xa6BfMirror <code>DW_ATE_signed_char</code>CcVariants that are selected based on system-wide \xe2\x80\xa6B`The Windows character subsystem.AjThe Windows GUI subsystem.BfModule was built with xfg (deprecated)AkAdd a library as dependencyDhInsert a new shared library through a <code>LC_LOAD_DYLIB</code> commandCiAdd the provided segment to the binary. This function \xe2\x80\xa6CjAddress relative to the imagebase where the binary\xe2\x80\x99s \xe2\x80\xa60ChFind the <code>IMAGE_BDD_INFO</code> at the given offsetAeRemove all debug infoCjReturn the COFF string associated with the section\xe2\x80\x99s \xe2\x80\xa6CjReturn comdat infomration (only if the section has the \xe2\x80\xa6CnReturn the CPU subtype supported by the Mach-O binary. For \xe2\x80\xa6CjCreate an enum type (<code>DW_TAG_enumeration_type</code>)AiThe service pack version.BoOffset in the binary where the signature starts0ClStart of the array of the <code>DataCodeEntry</code> entriesDkOffset of the <code>LC_DYLD_CHAINED_FIXUPS</code> chained payload. This \xe2\x80\xa6DgOffset of the <code>LC_DYLD_EXPORTS_TRIE</code>. This offset should \xe2\x80\xa6EdOffset in the <code>__LINKEDIT</code> segment where <em>start functions</em> are \xe2\x80\xa6CcOffset in the binary where the <em>hint</em> startsDfOffset in the <code>__LINKEDIT</code> segment where the payload is \xe2\x80\xa600BoReturn the description associated with the noteBcReturn information about the symbolCnDisassemble code starting at the given virtual address and \xe2\x80\xa6CiDisassemble instructions at the provided virtual address.BaEnd virtual address of the regionC`Export info associated with this symbol (if any)BnReturn the raw export trie as a slice of bytesCkOffset in the file where the content of this section is \xe2\x80\xa6ChThe file offset of the data associated with this segmentBnOffset of the data of this segment in the fileAcOn-disk file offsetCjTry to find the COFF string at the given offset in the \xe2\x80\xa6CkFlush internal information into the on-disk cache (see: \xe2\x80\xa6CaInstantiate an editor for the given binary objectDdTry to find the library (<code>DT_NEEDED</code>) with the given nameBaControl Flow Guard related flags.kHash valuesDjSize of the current header (i.e. <code>sizeof(Elfxx_Ehdr)</code>) This \xe2\x80\xa6Dj<strong>Original</strong> address of the entry in the Import Address TableAdResolved import nameCnSection information. This meaning of this value depends on \xe2\x80\xa6CiThis member specifies the symbol\xe2\x80\x99s type and binding \xe2\x80\xa6ChIndex into the module table that the init routine is \xe2\x80\xa6BgModule related to assembly instructionsCjReturn the path to the ELF interpreter that is used to \xe2\x80\xa6BcRebuild <code>PT_INTERPRETER</code>BiWhether it is an extended version of LIEFDlWhether the function is defined <strong>outside</strong> the compilation \xe2\x80\xa6BaWhether it\xe2\x80\x99s an instance methodCgTrue if the instruction is a register to register move.0CcReturn the lowest virtual address owned by this \xe2\x80\xa6DiName (or path) to the COFF object (<code>.obj</code>) associated with \xe2\x80\xa6BbOriginal string offset of the nameBiRVA of the delay-load import names table.BeThe number of sections in the binary.AfThe number of sectionsBbOriginal offset in the export TrieBlOffset of the data associated with this noteBoWhether ELF notes  information should be parsed0AdParse PE relocations0BbOriginal string offset of the pathC`The number of bytes in the function prolog code.BbOriginal DER blob of the attributeClAn array of items that explains the effect of the prolog \xe2\x80\xa6EkReturn an iterator over <strong>all</strong> <code>crate::elf::Relocation</code> of the \xe2\x80\xa6BiReturn an iterator over the different \xe2\x80\xa6DkIterator over the <code>crate::macho::Relocation</code> associated with \xe2\x80\xa6DeReturn an iterator over the <code>crate::macho::Relocation</code> \xe2\x80\xa6CbReturn the relocations as an iterator over the \xe2\x80\xa6CaWhether the builder should regenerate relocationsBgIterator over the (regular) relocationsAmIterator over the relocationsBnIf <code>ImageBddInfo::version</code> is not 1BgIterator over the different relocations2DkIterator over <strong>all</strong> the relocations used by this COFF binaryCjIterator over the relocations associated with this sectionEiReturn the <code>Type</code> associated with the <strong>return type</strong> of this \xe2\x80\xa6BjReturn rich header information if present.AePE Rich Header moduleBlELF Section index associated with the symbolCkThe signed integer that identifies the section, using a \xe2\x80\xa6CmOne-based index into the section table for the associated \xe2\x80\xa6DhSet the address of this function by defining <code>DW_AT_entry_pc</code>CdChange or set the raw data associated with this nodeAhChange the runpath valueDlThe raw size of <strong>all</strong> the load commands (<code>LC_xxx</code>)DiThe size of the code <code>.text</code> section or the sum of all the \xe2\x80\xa6AfSize of the debug dataBdSize of data that follows the headerBoSource file consumed by the <em>build tool</em>CkByte index of the first unwind code that describes this \xe2\x80\xa6BcParent class in case of inheritanceAoRebuild <code>DT_VERNEED</code>BiSection that holds the relocated TLS infoAaMangled type nameBeSlices that contain the unwind codes.AkDetailed unwind informationDfReturn the <code>LC_VERSION_MIN_MACOSX/VERSION_MIN_IPHONEOS</code> \xe2\x80\xa6C`Create a new Data node with the provided payloadBfPacked relocations (Android specific).BhNew relr relocations (Android specific).CiThe relocation is using the packed Android-SLEB128 formatBhImage should execute in an AppContainer.CfHeader for COFF files that contain more than 65536 \xe2\x80\xa60DcStructure that represents the <code>LC_BUILD_VERSION</code> command0AfBare-metal TMS320C6000CnThis class represents ARM64-specific metadata used in CHPE \xe2\x80\xa6CbThis structure represents hybrid metadata for x86.Aidyld-1284.13 (2025-04-25)Aidyld-832.7.1 (2020-11-19)BbDLL can be relocated at load time.nInteger offsetBlTrait shared by all the <code>Entries</code>CdThis enum wraps the different fixups that can be \xe2\x80\xa60DkMatch <code>NT_GNU_BUILD_ID</code>: Unique build ID as generated by the \xe2\x80\xa6lGNU propertyBbMirror <code>IMAGE_BDD_INFO</code>BjAll instruction variants supported by LIEF0BkThis section is used to mark symbols as \xe2\x80\xa6DfThis structure mirrors the <code>DW_TAG_lexical_block</code> DWARF tagoGeneral optionsA`Options segment.AjRegister usage information0BnIsolation aware, but do not isolate the image.CcThis structure is used to tweak the ELF parser: \xe2\x80\xa6CbThis structure is used to tweak the PE parser: \xe2\x80\xa6CmThis class provides general information (RVA, name) about \xe2\x80\xa60CnThis enum represents a node in the resource tree which can \xe2\x80\xa6CmRepresents a runtime table of function variants sharing a \xe2\x80\xa6CgSection with symbol stubs, byte size of stub in the \xe2\x80\xa6AoIndices for SHN_XINDEX entries.B`Entry for <code>DT_SONAME</code>0CmStructure that represents a dynamic entry associated with \xe2\x80\xa6CmClass that represents the SubFramework command. Accodring \xe2\x80\xa60CgAuxiliary Format 3: Weak Externals from the PE-COFF \xe2\x80\xa6BgAdd an address to the list of callbacksBfRebuild <code>DT_ANDROID_REL[A]</code>BgTarget architecture for this relocationChThe CPU architecture that is targeted by this Thread \xe2\x80\xa6CnCompute the authentihash for the current PE with the given \xe2\x80\xa6DcFind the <code>IMAGE_BDD_INFO</code> associated with the given infoDgReturn <strong>regular</strong> binding\xe2\x80\x99s opcodes as a slice of bytesCaBinding info associated with this symbol (if any)CgType of the binding. Most of the times it should be \xe2\x80\xa6D`The bitwise or (<code>|</code>) of the bits in two flags values.000000000000000DfReturn list of <code>X509</code> certificates associated with this \xe2\x80\xa6DgReturn list of <code>crate::pe::signature::X509</code> certificates \xe2\x80\xa6CeReturn the <code>CodeViewPDB</code> object if presentCmCommand line arguments used to invoke the <em>build tool</em>AdThe command\xe2\x80\x99s typeAiThe complex type (if any)BkContentInfo as described in the RFC2315 \xe2\x80\xa60CmReturn the OID that describes the content wrapped by this \xe2\x80\xa6CkReturn the OID that describes this content info. In the \xe2\x80\xa6ChCreate a structure type (<code>DW_TAG_class_type</code>)CdCreate a union type (<code>DW_TAG_union_type</code>)BcThe beginning of the encrypted areaCjReturn the <code>LC_DATA_IN_CODE</code> command if presentAhPE Delayed import moduleBgDelete the child node with the given idAfThe displacement valueCiDrop the versioning requirement and replace the value \xe2\x80\xa6ClEnable globally cache/memoization. One can also leverage \xe2\x80\xa6CnThe expected virtual size of the private address range for \xe2\x80\xa6BiFind the export entry at the provided RVADfIf <code>Unpacked::E</code> == 0, specifies the count of the total \xe2\x80\xa6CmAccording to the PE specifications this value is reserved \xe2\x80\xa6BiOffset of this attribute in the aggregateDaTry to find the node associated with the given <code>Types</code>CdTry to find the library with the given library name.CkFix call instructions that target addresses outside the \xe2\x80\xa6DdGet a <code>Binary</code> representation for this Dylib with the \xe2\x80\xa6CdReturn the highest virtual address owned by this \xe2\x80\xa6Baaddress of initialization routineCmDisassemble the current function by returning an iterator \xe2\x80\xa6DeThe bitwise and (<code>&amp;</code>) of the bits in two flags values.000000000000000C`Whether it\xe2\x80\x99s a <code>constexpr</code> variableCgThe name of the function which is used for linking (\xe2\x80\xa6CgThe name of the variable which is used for linking (\xe2\x80\xa6AkBased address of this cacheDgAccording to the PE specifications, this value is <em>reserved</em> \xe2\x80\xa6AcTarget architectureCbReturn the <code>LC_MAIN</code> command if presentAlMangled name of the protocolCiPrototype of the method in its mangled representation \xe2\x80\xa6CkType of the instance var in its mangled representation (\xe2\x80\xa6DbReturn an iterator over the different <code>MappingInfo</code> \xe2\x80\xa6CnThe starting number for the exports. Usually this value is \xe2\x80\xa6AlRVA of the original functionCeA flag that indicates whether the enclave permits \xe2\x80\xa6BmProgram description provided by the publisherAmRemove a specific debug entryAmRemove the given export entryBfReserved (padding) values. Should be 0CmIf the resources tree needs to be relocated, this defines \xe2\x80\xa6CiThe name of the section in which this function is definedCmName of the section in which this symbol is defined (e.g. \xe2\x80\xa6CmType of the section. This value can help to determine the \xe2\x80\xa6BjName of the segment that owns this sectionDkSet the function as external by defining <code>DW_AT_external</code> to \xe2\x80\xa6BoMark this variable as <strong>imported</strong>AnChange or set the PDB filenameCnSet the upper and lower bound addresses for this function. \xe2\x80\xa6CnChange or set the manifest. If the manifest node path does \xe2\x80\xa6CgSet the <code>DW_AT_producer</code> producer attribute.BiChange or set the <em>reserved</em> fieldClThe size (in bytes) of the image, including all headers, \xe2\x80\xa6DiSkip relocating the <code>PT_DYNAMIC</code> segment (only relevant if \xe2\x80\xa6CkOffset of the epilog relatives to the start of the functionBeRaw data (include start RVA and type)BbIterator over the COFF\xe2\x80\x99s stringsAmSize of the size string tableCjIndex of the first symbol in the dynamic symbols table \xe2\x80\xa6BiReturn an iterator over the symbol stubs.BdThe associated symbol table (if any)ChList of exceptions (types) that can be thrown by the \xe2\x80\xa6BhTry to find the type with the given nameDkTry to find the (static) variable at the given <strong>virtual</strong> \xe2\x80\xa6DdConvert an <strong>absolute</strong> virtual address into an offset.CaConvert the given virtual address into an offset.ClReturn the size taken by the binary when loaded (virtual \xe2\x80\xa6DiThe in-memory size of this segment. Usually, if the <code>.bss</code> \xe2\x80\xa6AkVirtual size of the segmentChReturn the size of the current binary when loaded in \xe2\x80\xa6CaReturn the size of the data when mapped in memoryCmReturn the size of the data when mapped in memory (should \xe2\x80\xa6CgNote that is specific to Android and that describes \xe2\x80\xa6CjThis auxiliary symbol represents a filename (auxiliary \xe2\x80\xa6CfThis class wraps build metadata represented by the \xe2\x80\xa60CkCoredump that wraps the <code>elf_prpsinfo</code> structureCkCoredump that wraps the <code>elf_prstatus</code> structureDdStructure that represents the <code>LC_CODE_SIGNATURE</code> command0CiThis structure represents a location in the different \xe2\x80\xa6CmThis structure represents an entry in the array of images \xe2\x80\xa60BeTrait shared by all runtime functions0ChFlags used to characterize the semantics of the functionBjTrait shared by the different COFF headersDkStructure which represents the <code>LC_LINKER_OPTIMIZATION_HINT</code> \xe2\x80\xa60oABI informationAaAbiflags segment.CiAttribute for the OID: <code>1.3.6.1.4.1.311.3.3.1</code>CiThis structure exposes the MS Counter Signature attributeAoPointers to pre-init functions.AdPush a machine frame0AhRegular (default) header0DgClass that represents the MachO <code>LC_SOURCE_VERSION</code> This \xe2\x80\xa60CjAttribute for the OID: <code>1.3.6.1.4.1.311.2.1.12</code>CeInterface over the structure described by the OID \xe2\x80\xa6ClStructure that represents the <code>LC_SYMTAB</code> command0CfStructure which represents an entry defined in the \xe2\x80\xa60CaInterface over <code>DW_TAG_template_alias</code>0CnThis structure represents a <code>DW_TAG_template_alias</code>0EeStructure that represents the <code>LC_THREAD</code> / <code>LC_UNIXTHREAD</code> \xe2\x80\xa60DeStructure which represents the <code>LC_TWOLEVEL_HINTS</code> command0BhMirror <code>DW_ATE_unsigned_char</code>AbUnwind informationBgAdd a parameter to the current functionoAdd a parameterDdIf the export is a re-export (<code>Flags::REEXPORT</code>) this \xe2\x80\xa6DkIndicates whether <code>RuntimeTableEntry::implementation</code> refers \xe2\x80\xa6BfClass of the binding (weak, lazy, \xe2\x80\xa6)DeThe bitwise and (<code>&amp;</code>) of the bits in two flags values.000000000000000DfThe bitwise exclusive-or (<code>^</code>) of the bits in two flags \xe2\x80\xa6000000000000000mBloom filtersDcGiven a <code>Instruction::is_branch</code> instruction, try to \xe2\x80\xa60CkReturn the <code>LC_BUILD_VERSION</code> command if presentCkCompiled Hybrid Portable Executable (CHPE) metadata (if \xe2\x80\xa6DmTry to find the Objective-C class with the given <strong>mangled</strong> \xe2\x80\xa6CnThe number of slots in the unwind codes array. Some unwind \xe2\x80\xa6CjFind <code>X509</code> certificate according to its issuerCdFind x509 certificate according to its serial numberC`The initial content used to initialize TLS data.BdSection that holds the debug entriesCfReturn the delayed imports as an iterator over the \xe2\x80\xa6CkA flag that indicates whether the image is suitable for \xe2\x80\xa6CcTry to find an <code>ImportEntry</code> by its nameBiFind the export entry with the given nameDo<strong>If E() == 1</strong>, index of the first unwind code that describes \xe2\x80\xa6AoIterator over the epilog scopesChModule related to the x86_64 exception unwinding supportCeTry to find the function (symbol) with the given nameDdTry to find the <code>DyldSharedCache</code> associated with the \xe2\x80\xa6CfThe <code>flagBitNums</code> value as a slice of bytesCdTrue if the subcaches are associated with this cacheBhSee: <code>DelayImportEntry::data</code>DiReturn the <code>DataDirectory</code> associated with the IAT (import \xe2\x80\xa6CgSection that holds the relocated import table (IAT/ILT)AiSpecify the data encodingCnThe version number that the author of the enclave assigned \xe2\x80\xa6AoNumber of imported symbol namesEdTrue if target instruction is a <code>blr</code>, false if it\xe2\x80\x99s a <code>br</code>.ClWhether this function is created by the compiler and not \xe2\x80\xa6BdWhether this enclave can be debuggedCfTrue if the instruction marks the end of a basic block0CbThe major version number of the debug data format.BnThe major version number (can be user-defined)mMajor versionBjThe major version number, set by the user.AcMemory access flags0AdSize of CLR metadataCbThe minor version number of the debug data format.BnThe minor version number (can be user-defined)mMinor versionBjThe minor version number, set by the user.AiNumber of registers savedBfReturn Objective-C metadata if presentCgOriginal size of the section (regardless modifications)B`Original file size of the binaryDgThe original <code>NT_xxx</code> integer value. The meaning of this \xe2\x80\xa6AjParse PE Exports Directory0AiParse PE Import Directory0BiWhether the overlay data should be parsed0DgThe <strong>file</strong> size of the data associated with this segmentBeRebuild <code>DT_PREINIT_ARRAY</code>DfThis module wraps a PDB public symbol (stream number <code>n+5</code>)CaRaw blob that is signed by the signer certificateBlSection that holds the relocated relocationsClRemove the imported library with the given <code>name</code>DiIterator over the different <code>RuntimeTable</code> entries located \xe2\x80\xa6DbConvert a <strong>relative</strong> virtual address into an offsetClReturn the list of the function RVA in the SEH table (if \xe2\x80\xa6CeReturn the serial number associated with the x509 \xe2\x80\xa6CbUnique id for certificate issued by a specific CA.AkChange or set the code pageBnChange or set the resources tree to given nodeAkChange or set the timestampDaoffset of <code>dyld_chained_starts_in_image</code> in chain_dataAlRebuild <code>.symtab</code>ClStorage class of the symbol which indicates what kind of \xe2\x80\xa6CkReturn the <code>LC_SUB_FRAMEWORK</code> command if presentCnOffset from the start of the file to the n_list associated \xe2\x80\xa6CkThe stamp that is set to zero until the image is bound. \xe2\x80\xa6AmThe date and time stamp valueBjTimestamp when the COFF has been generatedBdObject file compatibility attributesBiBPABI DLL dynamic linking pre-emption mapCfTrait shared by all architecture-specific CHPEMetadataB`Debugging info has been removed.ClEnum that represents the different variants of a dynamic \xe2\x80\xa6CfStructure that represents the LC_ENCRYPTION_INFO / \xe2\x80\xa60DfStructure which represents the <code>LC_FUNCTION_STARTS</code> command0AbObject attributes.CaModule has Guarded Memcpy instrumentation presentAiNative Windows 9x driver.CkStructure which represents the PE OptionalHeader (after \xe2\x80\xa60ClPush a machine frame. This unwind code is used to record \xe2\x80\xa6EgTrait shared by <strong>all</strong> the relocations defined in <code>Relocation</code>CmSkip the verification of the certificates time validities \xe2\x80\xa6CgThis file should only be run on a uniprocessor machine.kWindows CE.AeAdd a new debug entryCmReturn build metadata such as the version of the compiler \xe2\x80\xa6AkCode integrity information.BaNumber of entries in the code mapClReturn the <code>LC_CODE_SIGNATURE</code> command if presentAjRebuild the Coredump notesCgCreate a typdef with the name provided in the first \xe2\x80\xa6CkFind <code>X509</code> certificate according to its subjectAhPE Data Directory moduleAmOriginal source code location0CkThe original source location where the variable is defined.CnTry to demangle the symbol or return an empty string if it \xe2\x80\xa60CmDemangled representation of the symbol or an empty string \xe2\x80\xa6000BfDemangled representation of the symbolAkDemangled name of the classCfReturn the <code>LC_DYSYMTAB</code> command if presentClWhen enabled, this function allows to record and to keep \xe2\x80\xa6ChReturn the data directory associated with the exceptionsBcSection that holds the export tableCnThe section\xe2\x80\x99s file alignment. This value must be a power \xe2\x80\xa6CkChained fixups version. The loader (dyld v852.2) checks \xe2\x80\xa6CgForce to relocating all the ELF structures that are \xe2\x80\xa6AnTrue if it embeds a public keyDeReturn the object\xe2\x80\x99s class. <code>ELF64</code> or <code>ELF32</code>CmThe relative address of the implementation or an index if \xe2\x80\xa6CaFind an import by its DLL name (case insensitive)AiThe format of the importsBeOffset of imports table in chain dataBoTrue if the section can be discarded as needed.0CkIndicates whether the item containing the address to be \xe2\x80\xa6ClWhether this type is a <code>DW_TAG_unspecified_type</code>.CnLoad a shared cache from a single file or from a directory \xe2\x80\xa6BkThe maximum of protections for this segmentCkReturn the offset computed by LIEF to identify overlay dataAhProcessor-specific flagsCeReturn an iterator over the public symbol stream (\xe2\x80\xa6BmReturn Rebase\xe2\x80\x99s opcodes as a slice of bytesCgRegister index used for the indirect call/jump. For \xe2\x80\xa6ClReturn the data directory associated with the relocation \xe2\x80\xa6D`Remove the <code>DT_NEEDED</code> dependency with the given nameDhRemove the given segment. If <code>clear</code> is set, the original \xe2\x80\xa6BdCompute the size of all the headers.CgSize of the DosHeader + PE Header + Section headers \xe2\x80\xa6ClReturn the <code>LC_SOURCE_VERSION</code> command if presentCeOffset from the start of the file to the string tableCdReturn the <code>LC_SYMTAB</code> command if presentClReturn the SymbolVersion associated with this symbol (if \xe2\x80\xa6ChThe compression algorithm (if any) used to store the \xe2\x80\xa6BfOffset of symbol strings in chain dataDkReturn an iterator over the symtab-debug <code>crate::elf::Symbol</code>\xe2\x80\xa6DbReturn the <code>LC_THREAD/LC_UNIXTHREAD</code> command if presentCmThis structure exposes the different elements that can be \xe2\x80\xa60CgModule performs control flow integrity checks using \xe2\x80\xa6CnThis structure represents a CompilationUnit (or Module) in \xe2\x80\xa6AhA DWARF compilation unitDlThis structure represents an <strong>editable</strong> DWARF compilation \xe2\x80\xa6210nEntry when \xe2\x80\xa60CiThis class wraps fixups associated with the (special) \xe2\x80\xa6DhStructure that represents a <code>LC_DYLD_ENVIRONMENT</code> command \xe2\x80\xa60DgStructure that represents the <code>LC_DYLD_EXPORTS_TRIE</code> command0C`This struct interfaces a dyld shared cache file.0AcAn EFI application.BcCode integrity checks are enforced.AoASLR with 64 bit address space.CeInterface over <code>DW_TAG_ptr_to_member_type</code>0CnThis structure represents a <code>DW_TAG_interface_type</code>0CjThe file does not contain base relocations and must be \xe2\x80\xa6ChModule contains return flow instrumentation and metadataChInterface over <code>DW_TAG_rvalue_reference_type</code>0DeThis structure represents a <code>DW_TAG_rvalue_reference_type</code>0CnThis structure represents an entry in the exception table (\xe2\x80\xa6CiThis enum represents an entry in the exception table (\xe2\x80\xa6CkSave a nonvolatile integer register on the stack with a \xe2\x80\xa6CjSave all 128 bits of a nonvolatile XMM register on the \xe2\x80\xa6BcSave a nonvolatile integer registerClSave a nonvolatile integer register on the stack using a \xe2\x80\xa6CiThe location to receive the TLS index assigned by the \xe2\x80\xa6CfVersion of the backend (e.g. <code>14.36.32537</code>)BaSize in bytes taken by BaseRelocsAdReserved should be 0CkCharacteristics of the section: it provides information \xe2\x80\xa6CmCharacteristics of the binary like whether it is a DLL or \xe2\x80\xa6ClCharacteristics of the structure which is defined by its \xe2\x80\xa6ChResource characteristics. This field is reserved for \xe2\x80\xa6CkThe four bits <code>[23:20]</code> describe alignment info.oCharacteristics5CnTry to decrypt the given signature and check if it matches \xe2\x80\xa6CmReturn the path to the directory in which the compilation \xe2\x80\xa6B`The type that embeds this memberCdCreate a new function owned by this compilation unitDlCreate a new <strong>global</strong> variable owned by this compilation unitBeCurrent version of the shared libraryDhSame as <code>dump</code> but with a limit on the number of bytes to \xe2\x80\xa6DjReturn an iterator over the <code>crate::elf::DynamicEntries</code> of \xe2\x80\xa6BgRebuild <code>PT_DYNAMIC</code> segmentDjReturn an iterator over the dynamic <code>crate::elf::Symbol</code> of \xe2\x80\xa6DdReturn the <code>LC_ENCRYPTION_INFO/LC_ENCRYPTION_INFO_64</code> \xe2\x80\xa6CaRVA to this architecture-specific exception tableAkRecover and fix relocationsBjThe index of the first forwarder referenceCmReturn the <code>LC_FUNCTION_STARTS</code> command if presentAoTrue if it embeds a private keyCmIdentifies the version of the ABI for which the object is \xe2\x80\xa6CmThe RVA of the array of images that the enclave image may \xe2\x80\xa6ClThe relative virtual address of a NULL-terminated string \xe2\x80\xa6BgThe initial protections of this segmentBnCheck if the given file is a dyld shared cacheDfReturn the <code>LC_LINKER_OPTIMIZATION_HINT</code> command if presentCiReturn the data directory associated with the load configCmLoad and associate an external debug file (e.g., DWARF or \xe2\x80\xa6AfOffset of CLR metadataCbThe number of line-number entries for the section.BfNumber of entries in the module table.CnName of path to the original binary object (COFF, Archive) \xe2\x80\xa6DdHeader that follows the <code>Binary::header</code>. It is named \xe2\x80\xa6AjThe size of the parametersAoParse PE authenticode signature0BjRemove the export entry with the given RVAAdThe scaled register.BoTry to find the ELF section with the given nameAjFind a section by its nameCjA pointer to a cookie that is used by Visual C++ or GS \xe2\x80\xa6CjLook for the segment with the given type. If there are \xe2\x80\xa6BbChange the path to the interpreterBdSet the return type of this function0BgLength of the function prolog in bytes.BkReturn the size of the data in the section.0CiThis attribute aims to store a function for resolving \xe2\x80\xa60DjReturn an iterator over the  <code>crate::elf::SymbolVersion</code> of \xe2\x80\xa6CmThe low 32 bits of the number of seconds since January 1, \xe2\x80\xa6CfThe time that the resource data was created by the \xe2\x80\xa6ClReturn the <code>LC_TWOLEVEL_HINTS</code> command if presentBiUnderlying type targeted by this modifier0BaThe underlying type of this arrayB`The type pointed by this pointerC`The underlying type referenced by this ref-type.AdThis underlying typeC`The underlying type referenced by this set-type.C`The underlying type being const-ed by this type.B`The type aliased by this typedefCaThe type of the member referenced by this pointer0CeThe underlying type referenced by this restrict-type.CcThe underlying type referenced by this shared-type.BiThe underlying type aliased by this type.B`The underlying type being thrownBcThe virtual address of the segment.CaAddress of the section <strong>in memory</strong>BlAbsolute virtual base address of the segmentCmThe RVA for which the offset of the relocation entries is \xe2\x80\xa6DbMirror <code>IMAGE_IMPORT_CONTROL_TRANSFER_ARM64_RELOCATION</code>DcStructure that describes a relocation entry for <code>Arm64X</code>BkClass that represents an auxiliary symbols.ChModule performs control flow and write integrity checks.AoSection with literal C strings.DeStructure that represents the <code>LC_DYLIB_CODE_SIGN_DRS</code> \xe2\x80\xa60CnStructure that represents an entry (i.e. an import) in the \xe2\x80\xa6CcFile is executable (i.e. no unresolved externel \xe2\x80\xa6nEntry when \xe2\x80\xa60BaThis structure represents the \xe2\x80\xa6DfClass representing the <code>LC_FUNCTION_VARIANTS</code> load command.0DhMatch <code>NT_GNU_GOLD_VERSION</code>: The version of gold used to linkBjSame semantic as WTD_LIFETIME_SIGNING_FLAGBbSection with pointers to literals.ChAttribute for the OID: <code>1.2.840.113549.1.9.5</code>CeInterface over the structure described by the OID \xe2\x80\xa6A`RISC-V AttributeBfStructure that describes a redirectionCmThis manager abstracts the tree representation to provide \xe2\x80\xa6AmSection with 4 byte literals.AmSection with 8 byte literals.DhStructure that represents the <code>LC_SEGMENT_SPLIT_INFO</code> command0ChThis class represents volatile metadata which can be \xe2\x80\xa60BhThis module wraps a PDB compilation unitBhThis module wraps DWARF compilation unitCmRe-compute the value of <code>OptionalHeader::checksum</code>CeCreate a primitive type with the given name and size.ClCreate a structure type (<code>DW_TAG_structure_type</code>)AoCreate a <code>void</code> typeCgReturn the data directories as an iterator over the \xe2\x80\xa6BkAlgorithm used to <em>digest</em> the file.BgReturn the digest used to hash the fileAlDigest used to hash the fileB`Algorithm used to hash the file.CnReturn the <code>LC_DYLD_ENVIRONMENT</code> command if presentCmReturn the signature created by the signing certificate\xe2\x80\x99\xe2\x80\xa6CcFind the export entry with the given ordinal numberElReturn an iterator over the <strong>exported</strong> <code>crate::elf::Symbol</code> of \xe2\x80\xa6AkReturn the extended versionDgFind the <code>Dylib</code> that encompasses the given virtual address.CmIf the frame register field is nonzero, this field is the \xe2\x80\xa6BbConvert from a bits value exactly.000000000000000CgVersion of the frontend (e.g. <code>19.36.32537</code>)DfTry to find the function at the given <strong>virtual</strong> addressBmTry to find the function at the given addressClTry to find the function with the given name (mangled or \xe2\x80\xa6CjTry to find the function whose name is given in parameter.CkThe global flags that control system behavior. For more \xe2\x80\xa6BmSee: <code>Header::object_file_version</code>ChIndex of the first symbol in the group of local symbols.ElReturn an iterator over the <strong>imported</strong> <code>crate::elf::Symbol</code> of \xe2\x80\xa6CjIterator over the indirect symbols indexed by this commandC`True if the instruction performs a memory access0C`Number of symbols in the group of local symbols.ClIf the current binary contains dynamic relocations (e.g. \xe2\x80\xa6AlNumber of symbols registeredClThe number of entries in the symbol table. This data can \xe2\x80\xa6CbIterator over the methods that could be overriddenCoThe original <code>LC_</code> int that is not supported by LIEFCeWhether it should parse in-depth exceptions metadata.0CjThe physical address of the segment. This value is not \xe2\x80\xa6DoTry to find the Objective-C protocol with the given <strong>mangled</strong>\xe2\x80\xa6CeThe symbol-table index of the record for the next \xe2\x80\xa6CkIterator over the methods of this protocol that must be \xe2\x80\xa6CmThe count of unique handlers in the table. This member is \xe2\x80\xa6ClThe VA of the sorted table of RVAs of each valid, unique \xe2\x80\xa6CoFind a section by its <strong>relative</strong> virtual addressCnThe security version number that the author of the enclave \xe2\x80\xa6CjThe segment register associated with the memory operation.AnChange or set the export flagsBfSet the stack offset of this variable.CiWhether annotations like method\xe2\x80\x99s address should be \xe2\x80\xa60DbSize in bytes of the zero to be <em>padded</em> after the data \xe2\x80\xa6DjSame behavior as <code>Metadata::to_decl</code> but with an additional \xe2\x80\xa6DgSame behavior as <code>Class::to_decl</code> but with an additional \xe2\x80\xa6DjSame behavior as <code>Protocol::to_decl</code> but with an additional \xe2\x80\xa6DkTry to find the (static) variable at the given <strong>virtual</strong> \xe2\x80\xa6BmTry to find the variable at the given addressCkTry to find the variable with the given name. This name \xe2\x80\xa6CjTry to find the variable whose name is given in parameter.CkVerify the binary against the embedded signature(s) (if \xe2\x80\xa6CkConfiguration with <strong>all</strong> the options enabledCkBig endian: the MSB precedes the LSB in memory. This is \xe2\x80\xa6CnLittle endian: the LSB precedes the MSB in memory. This is \xe2\x80\xa6BlModule has CastGuard instrumentation presentDeStructure that represents the <code>LC_DYLD_CHAINED_FIXUPS</code> \xe2\x80\xa60CeThis enum wraps the different versions of dynamic \xe2\x80\xa60ChThe function has an exception handler that should be \xe2\x80\xa6DiIterator over the different <code>crate::macho::Binary</code> wrapped \xe2\x80\xa6CdSection with 32-bit offsets to initializer functionsCiThis structure represents the load configuration data \xe2\x80\xa60ClIf the image is on network media, fully load it and copy \xe2\x80\xa6BgModule was built with retpoline supportC`This class exposes information about a given \xe2\x80\xa6BcSection with only 16 byte literals.ClAuxiliary Format 5: Section Definitions from the PE-COFF \xe2\x80\xa6CiThe function has a termination handler that should be \xe2\x80\xa6CdAdd the given dynamic entry and return the new entryBcAdd a new entry with the given nameCaAdd a new export entry given its name and its RVABhAdd a lexical block with the given rangeCdAddress of the debug data relative to the image baseDhIterator over the <code>SymbolVersionAux</code> associated with this \xe2\x80\xa6BiAuxiliary entries as an iterator over \xe2\x80\xa6BnAuxiliary symbols associated with this symbol.CmFind the sub-DyldSharedCache that wraps the given virtual \xe2\x80\xa6CjIterator over the strings located in the COFF string tableCjIterator over the CompilationUnit from the PDB\xe2\x80\x99s DBI \xe2\x80\xa6DjIterator on the <code>crate::dwarf::CompilationUnit</code> embedded in \xe2\x80\xa6ChCreate an array type with the given name, type and size.CgDisassemble code provided by the given slice at the \xe2\x80\xa60CoReturn the <code>LC_DYLD_EXPORTS_TRIE</code> command if presentChThis module contains structures related to the ARM64 \xe2\x80\xa6AnException handler RVA (if any)BoTry to find the exception info at the given RVACoReturn the <code>LC_FUNCTION_VARIANTS</code> command if presentCjThe size of each image in the array of images that the \xe2\x80\xa6BnTrue if the instruction is moving an immediate0DdReturn <strong>lazy</strong> binding\xe2\x80\x99s opcodes as a slice of bytesDgThe VA of a list of addresses where the <code>LOCK</code> prefix is \xe2\x80\xa6AmReturn the number of sectionsCnIt returns the number of sections in which this symbol can \xe2\x80\xa6CcThe number of sections associated with this segmentAmReturn the number of segmentsDgWhether dynamic symbols (those from <code>.dynsym</code>) should be \xe2\x80\xa60ChWhether relocations (including plt-like relocations) \xe2\x80\xa60CbParse an ELF file from the given file path and \xe2\x80\xa6CeParse from a string file path and with a provided \xe2\x80\xa6CjParse a PE file from the given file path and configuration1AmFile offset of the debug dataCnOffset of the relocation table. This value should be 0 for \xe2\x80\xa6CiReturn a manager interface to read and manipulate the \xe2\x80\xa6CmThe alignment (in bytes) of sections when they are loaded \xe2\x80\xa6BjChange or set the major version of the DLLBjChange or set the minor version of the DLLAkPE volatile memory metadataDdReturn <strong>weak</strong> binding\xe2\x80\x99s opcodes as a slice of bytesCmWrite back the current ELF binary into the file specified \xe2\x80\xa6CeWrite back the current MachO binary into the file \xe2\x80\xa6ClWrite back the current PE binary into the file specified \xe2\x80\xa6CnAggressively trim working set. This is deprecated and must \xe2\x80\xa6BeAn EFI driver with run-time services.CaAuxiliary Format 1 from the PE-COFF documentationClCOFF line numbers have been stripped. This is deprecated \xe2\x80\xa6CkAttribute for the OID: <code>1.3.6.1.4.1.311.10.3.28</code>CeInterface over the structure described by the OID \xe2\x80\xa6CjAttribute for the OID: <code>1.3.6.1.4.1.311.2.1.11</code>1BnMachine is based on a 32bit word architecture.ChAttribute for the OID: <code>1.2.840.113549.1.9.4</code>3ChFlags to tweak the verification process of the signatureDhRange of addresses where the <code>TLS::data_template</code> is located.DaReturn the <code>LC_DYLIB_CODE_SIGN_DRS</code> command if presentBjDisassemble code for the given symbol nameBeDisassemble code for the given symbolBlModule related to dynamic relocations (DVRT)EfFind the <code>Dylib</code> whose filename of <code>Dylib::path</code> matches the \xe2\x80\xa6EeFind the <code>Dylib</code> whose <code>Dylib::path</code> matches the provided path.CfConvert from a bits value, unsetting any unknown bits.000000000000000CkThe global flags that control system behavior. For more \xe2\x80\xa6CmIterator over the Control Flow Guard functions referenced \xe2\x80\xa6DkReturn an iterator over the functions <strong>imported</strong> in this \xe2\x80\xa6BoTrue if the instruction is and indirect branch.0BjReturn load configuration info if present.CeWhether the builder should regenerate the load configCmReturn an iterator over the object-file (<code>.o</code>) \xe2\x80\xa6BdRVA to the list of exported ordinalsEhReturn an iterator over the <code>.plt.got</code> <code>crate::elf::Relocation</code>\xe2\x80\xa6BmThe offset of the section data in the PE fileBaOffset to the section\xe2\x80\x99s contentCeThe process heap flags. For more information, see \xe2\x80\xa6CkThe file offset of the first COFF line-number entry for \xe2\x80\xa6CjTry to find the ELF relocation that takes place at the \xe2\x80\xa6BbRemove all libraries in the binaryD`Return the <code>LC_SEGMENT_SPLIT_INFO</code> command if presentAkSize of the stack to commitBgTrait shared by all dynamic relocationsDkMirror of <code>IMAGE_ARM64EC_CODE_RANGE_ENTRY_POINT</code>: Represents \xe2\x80\xa6CcThis structure represents a dynamic relocation (\xe2\x80\xa6BoThis class represents a dynamic relocation (\xe2\x80\xa6DhMatch <code>NT_GNU_PROPERTY_TYPE_0</code>: Program property note, as \xe2\x80\xa6B`App can handle &gt;2gb addressesCiCOFF symbol table entries for local symbols have been \xe2\x80\xa6BnPointer to an array of TLS callback functions.AmCreate a new compilation unitDfCreate a <code>DW_TAG_unspecified_type</code> type with the given nameBeCreate a pointer on the provided typeBmDisassemble code at the given virtual addressCjSome characteristics of the underlying binary like the \xe2\x80\xa6DaReturn the <code>LC_DYLD_CHAINED_FIXUPS</code> command if presentDkReturn an iterator over the regular <code>crate::elf::Relocation</code> \xe2\x80\xa6CfReturn an iterator over the Dynamic relocations (DVRT)CiReturn the data directory associated with delayed importsCjTry to find the COFF string at the given offset in the \xe2\x80\xa6CcReturn the content at the specified virtual addressBeThe major version number of the imageBeThe minor version number of the imageCnByte offset from the start of the file to the module table \xe2\x80\xa6BoNumber of entries in the indirect symbol table.CmThe number of directory entries immediately following the \xe2\x80\xa6BaVersion of the object file formatBlWhether it should parse nested ARM64X binary0BmReturn the size of a program header (i.e. \xe2\x80\xa6CnTry to find the section that encompasses the given offset. \xe2\x80\xa6AlFind a section by its offsetBmReturn the size of a section header (i.e. \xe2\x80\xa6CiTry to find the segment that encompasses the given offsetAiSignature algorithm (OID)CfSize of the heap to reserve when loading the PE binaryAkSize of the stack to commitCnAccording to the official PE specifications, this value is \xe2\x80\xa6DdMirror <code>IMAGE_IMPORT_CONTROL_TRANSFER_DYNAMIC_RELOCATION</code>CoStructure that represents the <code>LC_DYSYMTAB</code> command.0CkDefines an entry in the array of images that an enclave \xe2\x80\xa60AiEntry associated with \xe2\x80\xa6BaThis structure represents the \xe2\x80\xa6BbSection with lazy symbol pointers.CiAttribute for the OID: <code>1.3.6.1.4.1.311.2.4.1</code>CeInterface over the structure described by the OID \xe2\x80\xa6CnAttribute for the OID: <code>1.2.840.113549.1.9.16.2.47</code>AjThread local data section.ClAdd a member to the current struct-like at the specified \xe2\x80\xa6CmThe address of the entry point relative to the image base \xe2\x80\xa6DjSame as <code>Binary::assemble</code> but this function takes an extra \xe2\x80\xa6BkCreate a function type with the given name.BaFind a delayed import by its nameCdAlias for <code>LoadConfiguration::reserved1</code>.BlDisassemble code for the given function nameCkTry to find the dynamic entry associated with the given tagCiReturn the (public-key) algorithm used to encrypt the \xe2\x80\xa6BjArchitecture-specific exception table sizeBaIterator over the overriding infoCgIndex of the first symbol in the group of undefined \xe2\x80\xa6BoTrue if the current binary is targeting AndroidAhThe linker major versionCmThe minimum enclave security version that each image must \xe2\x80\xa6AhThe linker minor versionAiNumber of exports by nameBaRVA to the list of exported namesC`Number of entries in the local relocation table.ChNumber of symbols in the group of undefined external \xe2\x80\xa6CbNumber of relocations associated with this sectionCkNo longer used in recent PE binaries produced by Visual \xe2\x80\xa6AfNumber of relocations.DhWhether debug symbols (those from <code>.symtab</code>) should be parsed0ClThe file pointer to the beginning of the COFF relocation \xe2\x80\xa6AnOffset to the relocation tableAnRemove the given dynamic entryBlRemove the import entry with the given name.BjRemove the export entry with the given RVABkChange the rpath value with the given sliceCgSize of the stack to reserve when loading the PE binaryDfThe bitwise exclusive-or (<code>^</code>) of the bits in two flags \xe2\x80\xa6000000000000000DjSame as <code>Instruction::to_string</code> but without the address as \xe2\x80\xa60Cn\xe2\x80\x9cWeak externals\xe2\x80\x9d are a mechanism for object files that \xe2\x80\xa6DjStructure which represents the <code>LC_FUNCTION_VARIANT_FIXUPS</code> \xe2\x80\xa60CkAttribute for the OID: <code>1.2.840.113549.1.9.25.4</code>CeInterface over the structure described by the OID \xe2\x80\xa6ChAttribute for the OID: <code>1.2.840.113549.1.9.6</code>1BiModule supports read only delay load IAT.AfTerminal Server aware.AnThread local zerofill section.CnVA to the extra Compiled Hybrid Portable Executable (CHPE) \xe2\x80\xa6BkCompatibility version of the shared libraryCkCreate a stack-based variable owned by the current functionDgSame behavior as <code>enable_cache</code> but with a user-provided \xe2\x80\xa6AhPE enclave configurationBmNumber of entries in the export address tableAoRVA of the export address tableBiReturn details about the extended versionClAttempt to resolve the address of the function specified \xe2\x80\xa6DlTrue if the instruction is <strong>conditionally</strong> jumping to the \xe2\x80\xa60CkNo longer used in recent PE binaries produced by Visual \xe2\x80\xa6BgNumber of line number entries (if any).CmThe number of directory entries immediately following the \xe2\x80\xa6CdThe number of DataDirectory that follow this header.BkWhether versioning symbols should be parsed0DeSame as <code>Manager::print_tree</code> but with a maximal depth \xe2\x80\xa6ChThe process affinity mask. For more information, see \xe2\x80\xa6DkTry to find the <code>PublicSymbol</code> from the given name (based on \xe2\x80\xa6DiTry to find the <code>.plt.got</code> relocation for the given symbol \xe2\x80\xa6ClThe size of the optional header that follows this header \xe2\x80\xa6CkTry to find the symbol with the given name in the debug \xe2\x80\xa6DgVerify the binary with the <code>signature::Signature</code> object \xe2\x80\xa6CgSection with only function pointers for initialization.CdSection with only function pointers for termination.CdModule does not make use of the /GS security cookie.CbSection with thread local variable structure data.BkFind the data directory with the given typeCmTry to find the symbol with the given name in the dynamic \xe2\x80\xa6CjByte offset from the start of the file to the indirect \xe2\x80\xa6ClThe file pointer to the beginning of line-number entries \xe2\x80\xa60DnThe offset of the <strong>COFF</strong> symbol table. This value should be \xe2\x80\xa6AkOffset of the symbols tableCkOffset of the programs table (also known as segments table)AlOffset of the sections tableCkReturn the section\xe2\x80\x99s index which contains sections\xe2\x80\x99 \xe2\x80\xa6BmChange the runpath value with the given sliceDnSize of the OptionalHeader <strong>AND</strong> the data directories which \xe2\x80\xa6CcCheck if the binary is supporting ARM64 pointer \xe2\x80\xa6BaAn EFI driver with boot services.CnIf the image is on removable media, fully load it and copy \xe2\x80\xa6CiAttribute for the OID: <code>1.3.6.1.4.1.311.2.6.1</code>DiStructure which represents an entry defined in <code>DT_VERDEF</code> \xe2\x80\xa60CgReturn the offset to the <code>Header</code> structure.DoTry to find the function (symbol) with the given <strong>demangled</strong> \xe2\x80\xa6DeReturn the <code>LC_FUNCTION_VARIANT_FIXUPS</code> command if presentBcThe count of unique RVAs in the \xe2\x80\xa6CkThe VA of the sorted table of RVAs of each Control Flow \xe2\x80\xa6BmIterator over the functions referenced by \xe2\x80\xa6CoAlias for <code>LoadConfiguration::chpe_metadata_pointer</code>ClReturn the relative virtual address of the import lookup \xe2\x80\xa6DlTrue if the instruction is jumping (<strong>unconditionally</strong>) to \xe2\x80\xa60CgByte offset from the start of the file to the local \xe2\x80\xa6BiThe major version number of the subsystemCiThe maximum allocation size, in bytes. This member is \xe2\x80\xa6BiThe minor version number of the subsystemCcNumber of entries in the external relocation table.ChRemove the dynamic entries matching the given predicate.CeRemove the import entry with the given ordinal numberCcRemove all segments associated with the given type.CnThe size of the initialized data which are usually located \xe2\x80\xa6BfSection with non-lazy symbol pointers.ClEnum that wraps the different kinds of runtime functions \xe2\x80\xa60DiStructure which represents an entry in the <code>DT_VERNEED</code> or \xe2\x80\xa60AbA BCD application.DgIterator over the <strong>authenticated</strong> <code>Attribute</code>ClTry to find the SymbolVersionRequirement associated with \xe2\x80\xa6AiVA of the failure routineChWhether there is a large number of relocations whose \xe2\x80\xa6DjThe RVA of the import address table (<code>IAT</code>). The content of \xe2\x80\xa6DdThe minimum size of the <code>IMAGE_ENCLAVE_CONFIG(32,64)</code> \xe2\x80\xa6CkSymbolVersionAux associated with the current Version if \xe2\x80\xa6CjThe maximum block size that can be allocated from heap \xe2\x80\xa6CcModule contains valid control flow target metadata.BkModule contains longjmp target information.C`Mirror <code>IMAGE_BDD_DYNAMIC_RELOCATION</code>EkFind <code>X509</code> certificate according to its subject <strong>AND</strong> serial \xe2\x80\xa6CoVA of pointing to a <code>IMAGE_DYNAMIC_RELOCATION_TABLE</code>CgTry to resolve the value of the relocation with the \xe2\x80\xa6ChThe size of the uninitialized data which are usually \xe2\x80\xa6C`Convert the given virtual address into an offsetCgThis auxiliary symbol exposes information about the \xe2\x80\xa6ChSection with lazy symbol pointers to lazy loaded dylibs.CjByte offset from the start of the file to the external \xe2\x80\xa6CnIndex of the first symbol in the group of defined external \xe2\x80\xa6CkNumber of symbols in the group of defined external symbols.CfDeletes all required symbol versions linked to the \xe2\x80\xa6B`Return an iterator over the  \xe2\x80\xa6DiIterator over the <strong>unauthenticated</strong> <code>Attribute</code>ClThis auxiliary symbols marks the beginning of a function \xe2\x80\xa6CcReturn the array defined by the given tag (e.g. \xe2\x80\xa63BfModule enables suppression of exports.C`Get a slice of the content at the given address.CaReturn the sized content from the virtual addressCbGet the integer value at the given virtual address00CdThe count of unique RVAs in the table pointed by \xe2\x80\xa6CmThe VA where Control Flow Guard long jump target table is \xe2\x80\xa6CnTry to find the section that encompasses the given virtual \xe2\x80\xa6CnTry to find the segment that encompasses the given virtual \xe2\x80\xa6CcModule contains EH continuation target information.DeWhether the <code>LC_DYLD_CHAINED_FIXUPS</code> command should be \xe2\x80\xa6CnThe size of the minimum block that must be freed before it \xe2\x80\xa6CnThe size of the minimum total memory that must be freed in \xe2\x80\xa6EjFind <code>X509</code> certificate according to its issuer <strong>AND</strong> serial \xe2\x80\xa6CaNumber of entries in the external reference tableCnRemove <strong>all</strong> dynamic entries with the given tagCaSection with pointers to thread local structures.DaRemove entries in <code>.gnu.version_r</code> if they are not \xe2\x80\xa6DjThe <strong>major</strong> version number of the required operating systemDjThe <strong>minor</strong> version number of the required operating systemCkTry to remove the auxiliary requirement symbol with the \xe2\x80\xa6CfOffset of dynamic relocation table relative to the \xe2\x80\xa6BmIterator over the functions referenced by \xe2\x80\xa6CmThe VA where Control Flow Guard check-function pointer is \xe2\x80\xa6CeIterator over the Guard EH continuation functions \xe2\x80\xa6CjDelayload import table in its own .didat section (with \xe2\x80\xa6BlThe critical section default time-out value.CgThe section index of the dynamic value relocation tableCjByte offset from the start of the file to the external \xe2\x80\xa6ClModule contains suppressed export information. This also \xe2\x80\xa6CmThe VA where Control Flow Guard dispatch-function pointer \xe2\x80\xa6CnSection with thread local variable initialization pointers \xe2\x80\xa6CdThe count of unique RVAs in the table pointed by \xe2\x80\xa6CnThe VA where Control Flow Guard address taken IAT table is \xe2\x80\xa6BlVA of the failure routine <code>fptr</code>.BnVA of the Function verifying the stack pointer")